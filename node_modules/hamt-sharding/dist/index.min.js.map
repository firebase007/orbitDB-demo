{"version":3,"sources":["/Users/alex/Documents/Workspaces/ipfs/js-ipfs/packages/js-hamt-sharding/webpack/universalModuleDefinition","/Users/alex/Documents/Workspaces/ipfs/js-ipfs/packages/js-hamt-sharding/webpack/bootstrap","/Users/alex/Documents/Workspaces/ipfs/js-ipfs/packages/js-hamt-sharding/src/index.js","/Users/alex/Documents/Workspaces/ipfs/js-ipfs/packages/js-hamt-sharding/src/bucket.js","/Users/alex/Documents/Workspaces/ipfs/js-ipfs/packages/js-hamt-sharding/node_modules/sparse-array/index.js","/Users/alex/Documents/Workspaces/ipfs/js-ipfs/packages/js-hamt-sharding/src/consumable-hash.js","/Users/alex/Documents/Workspaces/ipfs/js-ipfs/packages/js-hamt-sharding/node_modules/buffer/index.js","/Users/alex/Documents/Workspaces/ipfs/js-ipfs/packages/js-hamt-sharding/node_modules/webpack/buildin/global.js","/Users/alex/Documents/Workspaces/ipfs/js-ipfs/packages/js-hamt-sharding/node_modules/base64-js/index.js","/Users/alex/Documents/Workspaces/ipfs/js-ipfs/packages/js-hamt-sharding/node_modules/ieee754/index.js","/Users/alex/Documents/Workspaces/ipfs/js-ipfs/packages/js-hamt-sharding/node_modules/isarray/index.js","/Users/alex/Documents/Workspaces/ipfs/js-ipfs/packages/js-hamt-sharding/src/consumable-buffer.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Bucket","require","options","isBucket","SparseArray","wrapHash","defaultOptions","bits","constructor","parent","posAtParent","this","_options","assign","_popCount","_parent","_posAtParent","hashFn","Error","hash","_children","place","_findNewBucketAndPos","bucket","_putAt","child","_findChild","_findPlace","_at","pos","_delAt","leafCount","compactArray","reduce","acc","childrenCount","length","onlyChild","children","c2","eachLeafSeries","serialize","map","index","push","asyncTransform","asyncMap","asyncReduce","async","asyncTransformBucket","output","mappedChildren","bitField","toJSON","mapNode","reduceNodes","prettyPrint","JSON","stringify","tableSize","Math","pow","result","hashValue","take","_putObjectAt","newPlace","set","unset","_level","find","exists","untake","Boolean","node","nodes","popCountReduce","count","byte","popCount","_v","v","sortInternal","a","b","valueOnly","elem","_bitArrays","_data","_length","_changedLength","_changedData","_internalPositionFor","undefined","_unsetInternalPos","_unsetBit","needsSort","_setBit","_setInternalPos","_sortData","last","iterator","mapped","Array","reducer","initialValue","finder","found","noCreate","bytePos","_bytePosFor","bitPos","slice","floor","targetLength","data","unshift","randomIndex","round","concat","splice","sort","bytes","newByte","pendingBitsForResultingByte","pendingBitsForNewByte","resultingByte","pending","shift","usingBits","min","pop","ConsumableBuffer","InfiniteHash","Buffer","isBuffer","_value","_hashFn","_depth","_availableBits","_currentBufferIndex","_buffers","pendingBits","_produceMoreBits","available","availableBits","availableForUntake","totalBits","buffer","base64","ieee754","isArray","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","Uint8Array","__proto__","arg","encodingOrOffset","allocUnsafe","from","TypeError","ArrayBuffer","array","byteOffset","byteLength","fromArrayLike","fromArrayBuffer","string","encoding","isEncoding","actual","write","fromString","obj","len","checked","copy","val","type","fromObject","assertSize","size","toString","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","start","end","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","bidirectionalIndexOf","dir","isNaN","arrayIndexOf","indexOf","lastIndexOf","arr","indexSize","arrLength","valLength","String","read","buf","readUInt16BE","foundIndex","j","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","charCodeAt","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","fromByteArray","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","fromCharCode","apply","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","global","foo","subarray","e","typedArraySupport","poolSize","_augment","species","configurable","fill","allocUnsafeSlow","_isBuffer","compare","x","y","list","swap16","swap32","swap64","arguments","equals","inspect","max","match","join","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","_arr","ret","out","toHex","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","code","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","trim","replace","stringtrim","base64clean","src","dst","g","Function","b64","lens","getLens","validLen","placeHoldersLen","tmp","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","parts","len2","encodeChunk","lookup","num","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","abs","log","LN2","START_MASKS","STOP_MASKS","byteBitsToInt","maskFor","_currentBytePos","_currentBitPos","_haveBits","taking"],"mappings":";CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,GACe,iBAAZC,QACdA,QAAsB,aAAID,IAE1BD,EAAmB,aAAIC,IARzB,CASGK,QAAQ,WACX,O,YCTE,IAAIC,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUP,QAGnC,IAAIC,EAASI,EAAiBE,GAAY,CACzCC,EAAGD,EACHE,GAAG,EACHT,QAAS,IAUV,OANAU,EAAQH,GAAUI,KAAKV,EAAOD,QAASC,EAAQA,EAAOD,QAASM,GAG/DL,EAAOQ,GAAI,EAGJR,EAAOD,QA0Df,OArDAM,EAAoBM,EAAIF,EAGxBJ,EAAoBO,EAAIR,EAGxBC,EAAoBQ,EAAI,SAASd,EAASe,EAAMC,GAC3CV,EAAoBW,EAAEjB,EAASe,IAClCG,OAAOC,eAAenB,EAASe,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEV,EAAoBgB,EAAI,SAAStB,GACX,oBAAXuB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAenB,EAASuB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAenB,EAAS,aAAc,CAAEyB,OAAO,KAQvDnB,EAAoBoB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQnB,EAAoBmB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFAxB,EAAoBgB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOnB,EAAoBQ,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRvB,EAAoB2B,EAAI,SAAShC,GAChC,IAAIe,EAASf,GAAUA,EAAO2B,WAC7B,WAAwB,OAAO3B,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAK,EAAoBQ,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRV,EAAoBW,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG7B,EAAoBgC,EAAI,GAIjBhC,EAAoBA,EAAoBiC,EAAI,G,+DChFrD,MAAMC,EAASC,EAAQ,GAEvBxC,EAAOD,QAAU,SAAqB0C,GACpC,OAAO,IAAIF,EAAOE,IAGpBzC,EAAOD,QAAQ2C,SAAWH,EAAOG,U,6BCNjC,MAAMC,EAAcH,EAAQ,GACtBI,EAAWJ,EAAQ,GAEnBK,EAAiB,CACrBC,KAAM,GAGR,MAAMP,EACJQ,YAAaN,EAASO,EAAQC,GAM5B,GALAC,KAAKC,SAAWlC,OAAOmC,OAAO,GAAIP,EAAgBJ,GAClDS,KAAKG,UAAY,EACjBH,KAAKI,QAAUN,EACfE,KAAKK,aAAeN,GAEfC,KAAKC,SAASK,OACjB,MAAM,IAAIC,MAAM,mCAIbP,KAAKC,SAASO,OACjBR,KAAKC,SAASO,KAAOd,EAASM,KAAKC,SAASK,SAE9CN,KAAKS,UAAY,IAAIhB,EAGvB,gBAAiB3B,GACf,OAAOA,aAAauB,EAGtB,UAAWT,EAAKN,GACd,MAAMoC,QAAcV,KAAKW,qBAAqB/B,SAExC8B,EAAME,OAAOC,OAAOH,EAAO9B,EAAKN,GAGxC,UAAWM,GACT,MAAMkC,QAAcd,KAAKe,WAAWnC,GAEpC,GAAIkC,EACF,OAAOA,EAAMxC,MAIjB,UAAWM,GACT,MAAM8B,QAAcV,KAAKgB,WAAWpC,GAC9BkC,EAAQJ,EAAME,OAAOK,IAAIP,EAAMQ,KAEjCJ,GAASA,EAAMlC,MAAQA,GACzB8B,EAAME,OAAOO,OAAOT,EAAMQ,KAI9BE,YACE,OAAOpB,KAAKS,UAAUY,eAAeC,OAAO,CAACC,EAAKT,IAC5CA,aAAiBzB,EACZkC,EAAMT,EAAMM,YAGdG,EAAM,EACZ,GAGLC,gBACE,OAAOxB,KAAKS,UAAUgB,OAGxBC,YACE,OAAO1B,KAAKS,UAAUvC,IAAI,GAG5B,kBACE,MAAMyD,EAAW3B,KAAKS,UAAUY,eAEhC,IAAK,MAAMP,KAASa,EAClB,GAAIb,aAAiBzB,EACnB,IAAK,MAAMuC,KAAMd,EAAMe,uBACfD,aAGFd,EAKZgB,UAAWC,EAAKT,GAEd,OAAOA,EAAOtB,KAAKS,UAAUa,OAAO,CAACC,EAAKT,EAAOkB,KAC3ClB,IACEA,aAAiBzB,EACnBkC,EAAIU,KAAKnB,EAAMgB,UAAUC,EAAKT,IAE9BC,EAAIU,KAAKF,EAAIjB,EAAOkB,KAGjBT,GACN,KAGLW,eAAgBC,EAAUC,GACxB,OA2HJC,eAAeC,EAAsB1B,EAAQuB,EAAUC,GACrD,MAAMG,EAAS,GAEf,IAAK,MAAMzB,KAASF,EAAOH,UAAUY,eAAgB,CACnD,GAAIP,aAAiBzB,QACbiD,EAAqBxB,EAAOqB,EAAUC,OACvC,CACL,MAAMI,QAAuBL,EAASrB,GAEtCyB,EAAON,KAAK,CACVQ,SAAU7B,EAAOH,UAAUgC,WAC3Bd,SAAUa,IAId,OAAOJ,EAAYG,IA1IZD,CAAqBtC,KAAMmC,EAAUC,GAG9CM,SACE,OAAO1C,KAAK8B,UAAUa,EAASC,GAGjCC,cACE,OAAOC,KAAKC,UAAU/C,KAAK0C,SAAU,KAAM,MAG7CM,YACE,OAAOC,KAAKC,IAAI,EAAGlD,KAAKC,SAASL,MAGnC,iBAAkBhB,GAChB,MAAMuE,QAAenD,KAAKgB,WAAWpC,GAC/BkC,EAAQqC,EAAOvC,OAAOK,IAAIkC,EAAOjC,KAEvC,GAAIJ,GAASA,EAAMlC,MAAQA,EACzB,OAAOkC,EAIX,iBAAkBlC,GAChB,MAAMwE,EAAYpD,KAAKC,SAASO,KAAK5B,GAC/BoD,QAAcoB,EAAUC,KAAKrD,KAAKC,SAASL,MAE3CkB,EAAQd,KAAKS,UAAUvC,IAAI8D,GAEjC,OAAIlB,aAAiBzB,EACZyB,EAAME,WAAWoC,GAGnB,CACLxC,OAAQZ,KACRkB,IAAKc,EACLxB,KAAM4C,GAIV,2BAA4BxE,GAC1B,MAAM8B,QAAcV,KAAKgB,WAAWpC,GAC9BkC,EAAQJ,EAAME,OAAOK,IAAIP,EAAMQ,KAErC,GAAIJ,GAASA,EAAMlC,MAAQA,EAAK,CAG9B,MAAMgC,EAAS,IAAIvB,EAAOW,KAAKC,SAAUS,EAAME,OAAQF,EAAMQ,KAC7DR,EAAME,OAAO0C,aAAa5C,EAAMQ,IAAKN,GAGrC,MAAM2C,QAAiB3C,EAAOI,WAAWF,EAAMN,MAG/C,OAFA+C,EAAS3C,OAAOC,OAAO0C,EAAUzC,EAAMlC,IAAKkC,EAAMxC,OAE3CsC,EAAOD,qBAAqBD,EAAMF,MAI3C,OAAOE,EAGTG,OAAQH,EAAO9B,EAAKN,GAClB0B,KAAKsD,aAAa5C,EAAMQ,IAAK,CAC3BtC,IAAKA,EACLN,MAAOA,EACPkC,KAAME,EAAMF,OAIhB8C,aAAcpC,EAAKnC,GACZiB,KAAKS,UAAUvC,IAAIgD,IACtBlB,KAAKG,YAEPH,KAAKS,UAAU+C,IAAItC,EAAKnC,GAG1BoC,OAAQD,GACFlB,KAAKS,UAAUvC,IAAIgD,IACrBlB,KAAKG,YAEPH,KAAKS,UAAUgD,MAAMvC,GACrBlB,KAAK0D,SAGPA,SACE,GAAI1D,KAAKI,SAAWJ,KAAKG,WAAa,EACpC,GAAuB,IAAnBH,KAAKG,UAAiB,CAExB,MAAMuB,EAAY1B,KAAKS,UAAUkD,KAAKC,GAEtC,KAAMlC,aAAqBrC,GAAS,CAClC,MAAMmB,EAAOkB,EAAUlB,KACvBA,EAAKqD,OAAO7D,KAAKC,SAASL,MAC1B,MAAMc,EAAQ,CACZQ,IAAKlB,KAAKK,aACVG,KAAMA,GAERR,KAAKI,QAAQS,OAAOH,EAAOgB,EAAU9C,IAAK8C,EAAUpD,aAGtD0B,KAAKI,QAAQe,OAAOnB,KAAKK,cAK/BY,IAAKe,GACH,OAAOhC,KAAKS,UAAUvC,IAAI8D,IAI9B,SAAS4B,EAAQ9F,GACf,OAAOgG,QAAQhG,GAGjB,SAAS6E,EAASoB,EAAM/B,GACtB,OAAO+B,EAAKnF,IAGd,SAASgE,EAAaoB,GACpB,OAAOA,EAsBTlH,EAAOD,QAAUwC,G,6BCyBjB,SAAS4E,EAAeC,EAAOC,GAC7B,OAAOD,EAAQE,EAASD,GAG1B,SAASC,EAASC,GAChB,IAAIC,EAAID,EAKR,OAJAC,GAASA,GAAK,EAAI,WAElBA,GAAS,UAAJA,IAAmBA,GAAK,EAAI,WAEG,UAA5BA,GAAKA,GAAK,GAAK,YAA0B,GAGnD,SAASC,EAAaC,EAAGC,GACvB,OAAOD,EAAE,GAAKC,EAAE,GAGlB,SAASC,EAAUC,GACjB,OAAOA,EAAK,GAzRd7H,EAAOD,QAAU,MACf,cACEmD,KAAK4E,WAAa,GAClB5E,KAAK6E,MAAQ,GACb7E,KAAK8E,QAAU,EACf9E,KAAK+E,gBAAiB,EACtB/E,KAAKgF,cAAe,EAGtB,IAAIhD,EAAO1D,GACT,IAAI4C,EAAMlB,KAAKiF,qBAAqBjD,GAAO,GAE3C,QAAckD,IAAV5G,GAEW,IAAT4C,IAEFlB,KAAKmF,kBAAkBjE,GAEvBlB,KAAKoF,UAAUpD,GAEfhC,KAAK+E,gBAAiB,EACtB/E,KAAKgF,cAAe,OAEjB,CACL,IAAIK,GAAY,GAEH,IAATnE,GACFA,EAAMlB,KAAK6E,MAAMpD,OAEjBzB,KAAKsF,QAAQtD,GAEbhC,KAAKgF,cAAe,GAEpBK,GAAY,EAGdrF,KAAKuF,gBAAgBrE,EAAKc,EAAO1D,EAAO+G,GAExCrF,KAAK+E,gBAAiB,GAI1B,MAAM/C,GACJhC,KAAKwD,IAAIxB,OAAOkD,GAGlB,IAAIlD,GACFhC,KAAKwF,YAEL,MAAMtE,EAAMlB,KAAKiF,qBAAqBjD,GAAO,GAE7C,IAAa,IAATd,EAIJ,OAAOlB,KAAK6E,MAAM3D,GAAK,GAGzB,KAAK5C,GAEH,OADA0B,KAAKwD,IAAIxD,KAAKyB,OAAQnD,GACf0B,KAAKyB,OAGd,aAGE,GAFAzB,KAAKwF,YAEDxF,KAAK+E,eAAgB,CACvB,MAAMU,EAAOzF,KAAK6E,MAAM7E,KAAK6E,MAAMpD,OAAS,GAC5CzB,KAAK8E,QAAUW,EAAOA,EAAK,GAAK,EAAI,EACpCzF,KAAK+E,gBAAiB,EAGxB,OAAO/E,KAAK8E,QAGd,QAAQY,GACN,IAAIrI,EAAI,EAER,KAAOA,EAAI2C,KAAKyB,QACdiE,EAAS1F,KAAK9B,IAAIb,GAAIA,EAAG2C,MACzB3C,IAIJ,IAAIqI,GACF,IAAIrI,EAAI,EACJsI,EAAS,IAAIC,MAAM5F,KAAKyB,QAE5B,KAAOpE,EAAI2C,KAAKyB,QACdkE,EAAOtI,GAAKqI,EAAS1F,KAAK9B,IAAIb,GAAIA,EAAG2C,MACrC3C,IAGF,OAAOsI,EAGT,OAAOE,EAASC,GACd,IAAIzI,EAAI,EACJkE,EAAMuE,EAEV,KAAOzI,EAAI2C,KAAKyB,QAAQ,CAEtBF,EAAMsE,EAAQtE,EADAvB,KAAK9B,IAAIb,GACGA,GAC1BA,IAGF,OAAOkE,EAGT,KAAKwE,GACH,IACIC,EACAP,EAFApI,EAAI,EAIR,KAAOA,EAAI2C,KAAKyB,SAAWuE,GACzBP,EAAOzF,KAAK9B,IAAIb,GAChB2I,EAAQD,EAAON,GACfpI,IAGF,OAAO2I,EAAQP,OAAOP,EAGxB,qBAAqBlD,EAAOiE,GAC1B,MAAMC,EAAUlG,KAAKmG,YAAYnE,EAAOiE,GAExC,GAAIC,GAAWlG,KAAK4E,WAAWnD,OAC7B,OAAQ,EAGV,MAAM0C,EAAOnE,KAAK4E,WAAWsB,GACvBE,EAASpE,EApIG,EAoIKkE,EAGvB,OAFgB/B,EAAO,GAAKiC,GAAU,EAMbpG,KAAK4E,WAAWyB,MAAM,EAAGH,GAAS5E,OAAO2C,EAAgB,GAG7DG,EAASD,IADf,YAAciC,EAAS,IAEa,GAPzC,EAWZ,YAAYpE,EAAOiE,GACjB,MAAMC,EAAUjD,KAAKqD,MAAMtE,EApJT,GAqJZuE,EAAeL,EAAU,EAE/B,MAAQD,GAAYjG,KAAK4E,WAAWnD,OAAS8E,GAC3CvG,KAAK4E,WAAW3C,KAAK,GAGvB,OAAOiE,EAGT,QAAQlE,GACN,MAAMkE,EAAUlG,KAAKmG,YAAYnE,GAAO,GAExChC,KAAK4E,WAAWsB,IAAY,GAAKlE,EAjKf,EAiKuBkE,EAG3C,UAAUlE,GACR,MAAMkE,EAAUlG,KAAKmG,YAAYnE,GAAO,GAExChC,KAAK4E,WAAWsB,MAAc,GAAKlE,EAvKjB,EAuKyBkE,GAG7C,gBAAgBhF,EAAKc,EAAO1D,EAAO+G,GACjC,MAAMmB,EAAOxG,KAAK6E,MACZF,EAAO,CAAC3C,EAAO1D,GAErB,GAAI+G,EACFrF,KAAKwF,YAELgB,EAAKtF,GAAOyD,MACP,CAIL,GAAI6B,EAAK/E,OACP,GAAI+E,EAAKA,EAAK/E,OAAS,GAAG,IAAMO,EAC9BwE,EAAKvE,KAAK0C,QACL,GAAI6B,EAAK,GAAG,IAAMxE,EACvBwE,EAAKC,QAAQ9B,OACR,CACL,MAAM+B,EAAczD,KAAK0D,MAAMH,EAAK/E,OAAS,GAC7CzB,KAAK6E,MAAQ2B,EAAKH,MAAM,EAAGK,GAAaE,OAAOjC,GAAMiC,OAAOJ,EAAKH,MAAMK,SAGzE1G,KAAK6E,MAAM5C,KAAK0C,GAGlB3E,KAAKgF,cAAe,EACpBhF,KAAK+E,gBAAiB,GAI1B,kBAAkB7D,GAChBlB,KAAK6E,MAAMgC,OAAO3F,EAAK,GAGzB,YACMlB,KAAKgF,cACPhF,KAAK6E,MAAMiC,KAAKvC,GAGlBvE,KAAKgF,cAAe,EAGtB,WACE,MAAM+B,EAAQ,GACd,IAGIC,EAHAC,EAA8B,EAC9BC,EAAwB,EACxBC,EAAgB,EAGpB,MAAMC,EAAUpH,KAAK4E,WAAWyB,QAEhC,KAAOe,EAAQ3F,QAAUyF,GAAuB,CAChB,IAA1BA,IACFF,EAAUI,EAAQC,QAClBH,EAAwB,GAG1B,MAAMI,EAAYrE,KAAKsE,IAAIL,EAAuBD,GAGlDE,IADeH,IADA,KAAcM,KAEF,EAAIL,EAC/BD,KAAsBM,EACtBJ,GAAyBI,EACzBL,GAA+BK,EAE1BL,IAAgCC,GAA0BE,EAAQ3F,UACrEsF,EAAM9E,KAAKkF,GACXA,EAAgB,EAChBF,EAA8B,GAKlC,IAAK,IAAI5J,EAAI0J,EAAMtF,OAAS,EAAGpE,EAAI,EAAGA,IAAK,CAGzC,GAAc,IAFA0J,EAAM1J,GAKlB,MAFA0J,EAAMS,MAMV,OAAOT,EAGT,eAGE,OAFA/G,KAAKwF,YAEExF,KAAK6E,MAAM9C,IAAI2C,M,8BCvQ1B,YAEA,MAAM+C,EAAmBnI,EAAQ,IAEjCxC,EAAOD,QAAU,SAAmByD,GAClC,OAAO,SAAkBhC,GACvB,OAAIA,aAAiBoJ,EAEZpJ,EAEA,IAAIoJ,EAAapJ,EAAOgC,KAKrC,MAAMoH,EACJ7H,YAAavB,EAAOgC,GAClB,GAAuB,iBAAXhC,IAAwBqJ,EAAOC,SAAStJ,GAClD,MAAM,IAAIiC,MAAM,oCAElBP,KAAK6H,OAASvJ,EACd0B,KAAK8H,QAAUxH,EACfN,KAAK+H,QAAU,EACf/H,KAAKgI,eAAiB,EACtBhI,KAAKiI,oBAAsB,EAC3BjI,KAAKkI,SAAW,GAGlB,WAAYtI,GACV,IAAIuI,EAAcvI,EAElB,KAAOI,KAAKgI,eAAiBG,SACrBnI,KAAKoI,mBAGb,IAAIjF,EAAS,EAEb,KAAOgF,EAAc,GAAG,CACtB,MAAM3H,EAAOR,KAAKkI,SAASlI,KAAKiI,qBAC1BI,EAAYpF,KAAKsE,IAAI/G,EAAK8H,gBAAiBH,GAEjDhF,GAAUA,GAAUkF,GADP7H,EAAK6C,KAAKgF,GAEvBF,GAAeE,EACfrI,KAAKgI,gBAAkBK,EAEM,IAAzB7H,EAAK8H,iBACPtI,KAAKiI,sBAIT,OAAO9E,EAGTU,OAAQjE,GACN,IAAIuI,EAAcvI,EAElB,KAAOuI,EAAc,GAAG,CACtB,MAAM3H,EAAOR,KAAKkI,SAASlI,KAAKiI,qBAC1BM,EAAqBtF,KAAKsE,IAAI/G,EAAKgI,YAAchI,EAAK8H,gBAAiBH,GAC7E3H,EAAKqD,OAAO0E,GACZJ,GAAeI,EACfvI,KAAKgI,gBAAkBO,EAEnBvI,KAAKiI,oBAAsB,GAAKzH,EAAKgI,cAAgBhI,EAAK8H,kBAC5DtI,KAAK+H,SACL/H,KAAKiI,wBAKX,yBACEjI,KAAK+H,SAEL,MAAMzJ,EAAQ0B,KAAK+H,OAAS/H,KAAK6H,OAAS7H,KAAK+H,OAAS/H,KAAK6H,OACvDzE,QAAkBpD,KAAK8H,QAAQxJ,GAC/BmK,EAAS,IAAIhB,EAAiBrE,GAEpCpD,KAAKkI,SAASjG,KAAKwG,GACnBzI,KAAKgI,gBAAkBS,EAAOH,oB,sDC9ElC,YAUA,IAAII,EAAS,EAAQ,GAEjBC,EAAU,EAAQ,GAElBC,EAAU,EAAQ,GAsDtB,SAASC,IACP,OAAOlB,EAAOmB,oBAAsB,WAAa,WAGnD,SAASC,EAAaC,EAAMvH,GAC1B,GAAIoH,IAAepH,EACjB,MAAM,IAAIwH,WAAW,8BAgBvB,OAbItB,EAAOmB,qBAETE,EAAO,IAAIE,WAAWzH,IACjB0H,UAAYxB,EAAO1I,WAGX,OAAT+J,IACFA,EAAO,IAAIrB,EAAOlG,IAGpBuH,EAAKvH,OAASA,GAGTuH,EAaT,SAASrB,EAAOyB,EAAKC,EAAkB5H,GACrC,KAAKkG,EAAOmB,qBAAyB9I,gBAAgB2H,GACnD,OAAO,IAAIA,EAAOyB,EAAKC,EAAkB5H,GAI3C,GAAmB,iBAAR2H,EAAkB,CAC3B,GAAgC,iBAArBC,EACT,MAAM,IAAI9I,MAAM,qEAGlB,OAAO+I,EAAYtJ,KAAMoJ,GAG3B,OAAOG,EAAKvJ,KAAMoJ,EAAKC,EAAkB5H,GAW3C,SAAS8H,EAAKP,EAAM1K,EAAO+K,EAAkB5H,GAC3C,GAAqB,iBAAVnD,EACT,MAAM,IAAIkL,UAAU,yCAGtB,MAA2B,oBAAhBC,aAA+BnL,aAAiBmL,YAsI7D,SAAyBT,EAAMU,EAAOC,EAAYlI,GAGhD,GAFAiI,EAAME,WAEFD,EAAa,GAAKD,EAAME,WAAaD,EACvC,MAAM,IAAIV,WAAW,6BAGvB,GAAIS,EAAME,WAAaD,GAAclI,GAAU,GAC7C,MAAM,IAAIwH,WAAW,6BAIrBS,OADiBxE,IAAfyE,QAAuCzE,IAAXzD,EACtB,IAAIyH,WAAWQ,QACHxE,IAAXzD,EACD,IAAIyH,WAAWQ,EAAOC,GAEtB,IAAIT,WAAWQ,EAAOC,EAAYlI,GAGxCkG,EAAOmB,qBAETE,EAAOU,GACFP,UAAYxB,EAAO1I,UAGxB+J,EAAOa,EAAcb,EAAMU,GAG7B,OAAOV,EAjKEc,CAAgBd,EAAM1K,EAAO+K,EAAkB5H,GAGnC,iBAAVnD,EAgGb,SAAoB0K,EAAMe,EAAQC,GACR,iBAAbA,GAAsC,KAAbA,IAClCA,EAAW,QAGb,IAAKrC,EAAOsC,WAAWD,GACrB,MAAM,IAAIR,UAAU,8CAGtB,IAAI/H,EAAwC,EAA/BmI,EAAWG,EAAQC,GAE5BE,GADJlB,EAAOD,EAAaC,EAAMvH,IACR0I,MAAMJ,EAAQC,GAE5BE,IAAWzI,IAIbuH,EAAOA,EAAK3C,MAAM,EAAG6D,IAGvB,OAAOlB,EAnHEoB,CAAWpB,EAAM1K,EAAO+K,GAgKnC,SAAoBL,EAAMqB,GACxB,GAAI1C,EAAOC,SAASyC,GAAM,CACxB,IAAIC,EAA4B,EAAtBC,EAAQF,EAAI5I,QAGtB,OAAoB,KAFpBuH,EAAOD,EAAaC,EAAMsB,IAEjB7I,OACAuH,GAGTqB,EAAIG,KAAKxB,EAAM,EAAG,EAAGsB,GACdtB,GAGT,GAAIqB,EAAK,CACP,GAA2B,oBAAhBZ,aAA+BY,EAAI5B,kBAAkBgB,aAAe,WAAYY,EACzF,MAA0B,iBAAfA,EAAI5I,SAigDNgJ,EAjgDmCJ,EAAI5I,SAkgDrCgJ,EAjgDF1B,EAAaC,EAAM,GAGrBa,EAAcb,EAAMqB,GAG7B,GAAiB,WAAbA,EAAIK,MAAqB9B,EAAQyB,EAAI7D,MACvC,OAAOqD,EAAcb,EAAMqB,EAAI7D,MAy/CrC,IAAeiE,EAr/Cb,MAAM,IAAIjB,UAAU,sFAxLbmB,CAAW3B,EAAM1K,GA6B1B,SAASsM,EAAWC,GAClB,GAAoB,iBAATA,EACT,MAAM,IAAIrB,UAAU,oCACf,GAAIqB,EAAO,EAChB,MAAM,IAAI5B,WAAW,wCA8BzB,SAASK,EAAYN,EAAM6B,GAIzB,GAHAD,EAAWC,GACX7B,EAAOD,EAAaC,EAAM6B,EAAO,EAAI,EAAoB,EAAhBN,EAAQM,KAE5ClD,EAAOmB,oBACV,IAAK,IAAIzL,EAAI,EAAGA,EAAIwN,IAAQxN,EAC1B2L,EAAK3L,GAAK,EAId,OAAO2L,EA0CT,SAASa,EAAcb,EAAMU,GAC3B,IAAIjI,EAASiI,EAAMjI,OAAS,EAAI,EAA4B,EAAxB8I,EAAQb,EAAMjI,QAClDuH,EAAOD,EAAaC,EAAMvH,GAE1B,IAAK,IAAIpE,EAAI,EAAGA,EAAIoE,EAAQpE,GAAK,EAC/B2L,EAAK3L,GAAgB,IAAXqM,EAAMrM,GAGlB,OAAO2L,EAgET,SAASuB,EAAQ9I,GAGf,GAAIA,GAAUoH,IACZ,MAAM,IAAII,WAAW,0DAAiEJ,IAAaiC,SAAS,IAAM,UAGpH,OAAgB,EAATrJ,EA8FT,SAASmI,EAAWG,EAAQC,GAC1B,GAAIrC,EAAOC,SAASmC,GAClB,OAAOA,EAAOtI,OAGhB,GAA2B,oBAAhBgI,aAA6D,mBAAvBA,YAAYsB,SAA0BtB,YAAYsB,OAAOhB,IAAWA,aAAkBN,aACrI,OAAOM,EAAOH,WAGM,iBAAXG,IACTA,EAAS,GAAKA,GAGhB,IAAIO,EAAMP,EAAOtI,OACjB,GAAY,IAAR6I,EAAW,OAAO,EAItB,IAFA,IAAIU,GAAc,IAGhB,OAAQhB,GACN,IAAK,QACL,IAAK,SACL,IAAK,SACH,OAAOM,EAET,IAAK,OACL,IAAK,QACL,UAAKpF,EACH,OAAO+F,EAAYlB,GAAQtI,OAE7B,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAa,EAAN6I,EAET,IAAK,MACH,OAAOA,IAAQ,EAEjB,IAAK,SACH,OAAOY,EAAcnB,GAAQtI,OAE/B,QACE,GAAIuJ,EAAa,OAAOC,EAAYlB,GAAQtI,OAE5CuI,GAAY,GAAKA,GAAUmB,cAC3BH,GAAc,GAOtB,SAASI,EAAapB,EAAUqB,EAAOC,GACrC,IAAIN,GAAc,EAalB,SANc9F,IAAVmG,GAAuBA,EAAQ,KACjCA,EAAQ,GAKNA,EAAQrL,KAAKyB,OACf,MAAO,GAOT,SAJYyD,IAARoG,GAAqBA,EAAMtL,KAAKyB,UAClC6J,EAAMtL,KAAKyB,QAGT6J,GAAO,EACT,MAAO,GAOT,IAHAA,KAAS,KACTD,KAAW,GAGT,MAAO,GAKT,IAFKrB,IAAUA,EAAW,UAGxB,OAAQA,GACN,IAAK,MACH,OAAOuB,EAASvL,KAAMqL,EAAOC,GAE/B,IAAK,OACL,IAAK,QACH,OAAOE,EAAUxL,KAAMqL,EAAOC,GAEhC,IAAK,QACH,OAAOG,EAAWzL,KAAMqL,EAAOC,GAEjC,IAAK,SACL,IAAK,SACH,OAAOI,EAAY1L,KAAMqL,EAAOC,GAElC,IAAK,SACH,OAAOK,EAAY3L,KAAMqL,EAAOC,GAElC,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAOM,EAAa5L,KAAMqL,EAAOC,GAEnC,QACE,GAAIN,EAAa,MAAM,IAAIxB,UAAU,qBAAuBQ,GAC5DA,GAAYA,EAAW,IAAImB,cAC3BH,GAAc,GAStB,SAASa,EAAKpH,EAAG3F,EAAGrB,GAClB,IAAIJ,EAAIoH,EAAE3F,GACV2F,EAAE3F,GAAK2F,EAAEhH,GACTgH,EAAEhH,GAAKJ,EAgJT,SAASyO,EAAqBrD,EAAQgC,EAAKd,EAAYK,EAAU+B,GAE/D,GAAsB,IAAlBtD,EAAOhH,OAAc,OAAQ,EAqBjC,GAnB0B,iBAAfkI,GACTK,EAAWL,EACXA,EAAa,GACJA,EAAa,WACtBA,EAAa,WACJA,GAAc,aACvBA,GAAc,YAGhBA,GAAcA,EAEVqC,MAAMrC,KAERA,EAAaoC,EAAM,EAAItD,EAAOhH,OAAS,GAIrCkI,EAAa,IAAGA,EAAalB,EAAOhH,OAASkI,GAE7CA,GAAclB,EAAOhH,OAAQ,CAC/B,GAAIsK,EAAK,OAAQ,EAAOpC,EAAalB,EAAOhH,OAAS,OAChD,GAAIkI,EAAa,EAAG,CACzB,IAAIoC,EAAyB,OAAQ,EAA5BpC,EAAa,EASxB,GALmB,iBAARc,IACTA,EAAM9C,EAAO4B,KAAKkB,EAAKT,IAIrBrC,EAAOC,SAAS6C,GAElB,OAAmB,IAAfA,EAAIhJ,QACE,EAGHwK,EAAaxD,EAAQgC,EAAKd,EAAYK,EAAU+B,GAClD,GAAmB,iBAARtB,EAGhB,OAFAA,GAAY,IAER9C,EAAOmB,qBAA+D,mBAAjCI,WAAWjK,UAAUiN,QACxDH,EACK7C,WAAWjK,UAAUiN,QAAQ1O,KAAKiL,EAAQgC,EAAKd,GAE/CT,WAAWjK,UAAUkN,YAAY3O,KAAKiL,EAAQgC,EAAKd,GAIvDsC,EAAaxD,EAAQ,CAACgC,GAAMd,EAAYK,EAAU+B,GAG3D,MAAM,IAAIvC,UAAU,wCAGtB,SAASyC,EAAaG,EAAK3B,EAAKd,EAAYK,EAAU+B,GACpD,IA2BI1O,EA3BAgP,EAAY,EACZC,EAAYF,EAAI3K,OAChB8K,EAAY9B,EAAIhJ,OAEpB,QAAiByD,IAAb8E,IAGe,UAFjBA,EAAWwC,OAAOxC,GAAUmB,gBAEY,UAAbnB,GAAqC,YAAbA,GAAuC,aAAbA,GAAyB,CACpG,GAAIoC,EAAI3K,OAAS,GAAKgJ,EAAIhJ,OAAS,EACjC,OAAQ,EAGV4K,EAAY,EACZC,GAAa,EACbC,GAAa,EACb5C,GAAc,EAIlB,SAAS8C,EAAKC,EAAKrP,GACjB,OAAkB,IAAdgP,EACKK,EAAIrP,GAEJqP,EAAIC,aAAatP,EAAIgP,GAMhC,GAAIN,EAAK,CACP,IAAIa,GAAc,EAElB,IAAKvP,EAAIsM,EAAYtM,EAAIiP,EAAWjP,IAClC,GAAIoP,EAAKL,EAAK/O,KAAOoP,EAAKhC,GAAqB,IAAhBmC,EAAoB,EAAIvP,EAAIuP,IAEzD,IADoB,IAAhBA,IAAmBA,EAAavP,GAChCA,EAAIuP,EAAa,IAAML,EAAW,OAAOK,EAAaP,OAEtC,IAAhBO,IAAmBvP,GAAKA,EAAIuP,GAChCA,GAAc,OAMlB,IAFIjD,EAAa4C,EAAYD,IAAW3C,EAAa2C,EAAYC,GAE5DlP,EAAIsM,EAAYtM,GAAK,EAAGA,IAAK,CAGhC,IAFA,IAAI2I,GAAQ,EAEH6G,EAAI,EAAGA,EAAIN,EAAWM,IAC7B,GAAIJ,EAAKL,EAAK/O,EAAIwP,KAAOJ,EAAKhC,EAAKoC,GAAI,CACrC7G,GAAQ,EACR,MAIJ,GAAIA,EAAO,OAAO3I,EAItB,OAAQ,EAeV,SAASyP,EAASJ,EAAK3C,EAAQgD,EAAQtL,GACrCsL,EAASC,OAAOD,IAAW,EAC3B,IAAIE,EAAYP,EAAIjL,OAASsL,EAExBtL,GAGHA,EAASuL,OAAOvL,IAEHwL,IACXxL,EAASwL,GALXxL,EAASwL,EAUX,IAAIC,EAASnD,EAAOtI,OACpB,GAAIyL,EAAS,GAAM,EAAG,MAAM,IAAI1D,UAAU,sBAEtC/H,EAASyL,EAAS,IACpBzL,EAASyL,EAAS,GAGpB,IAAK,IAAI7P,EAAI,EAAGA,EAAIoE,IAAUpE,EAAG,CAC/B,IAAI8P,EAASC,SAASrD,EAAOsD,OAAW,EAAJhQ,EAAO,GAAI,IAC/C,GAAI2O,MAAMmB,GAAS,OAAO9P,EAC1BqP,EAAIK,EAAS1P,GAAK8P,EAGpB,OAAO9P,EAGT,SAASiQ,EAAUZ,EAAK3C,EAAQgD,EAAQtL,GACtC,OAAO8L,EAAWtC,EAAYlB,EAAQ2C,EAAIjL,OAASsL,GAASL,EAAKK,EAAQtL,GAG3E,SAAS+L,EAAWd,EAAK3C,EAAQgD,EAAQtL,GACvC,OAAO8L,EA26BT,SAAsBE,GAGpB,IAFA,IAAIC,EAAY,GAEPrQ,EAAI,EAAGA,EAAIoQ,EAAIhM,SAAUpE,EAEhCqQ,EAAUzL,KAAyB,IAApBwL,EAAIE,WAAWtQ,IAGhC,OAAOqQ,EAn7BWE,CAAa7D,GAAS2C,EAAKK,EAAQtL,GAGvD,SAASoM,EAAYnB,EAAK3C,EAAQgD,EAAQtL,GACxC,OAAO+L,EAAWd,EAAK3C,EAAQgD,EAAQtL,GAGzC,SAASqM,EAAYpB,EAAK3C,EAAQgD,EAAQtL,GACxC,OAAO8L,EAAWrC,EAAcnB,GAAS2C,EAAKK,EAAQtL,GAGxD,SAASsM,EAAUrB,EAAK3C,EAAQgD,EAAQtL,GACtC,OAAO8L,EA06BT,SAAwBE,EAAKO,GAI3B,IAHA,IAAItQ,EAAGuQ,EAAIC,EACPR,EAAY,GAEPrQ,EAAI,EAAGA,EAAIoQ,EAAIhM,WACjBuM,GAAS,GAAK,KADa3Q,EAEhCK,EAAI+P,EAAIE,WAAWtQ,GACnB4Q,EAAKvQ,GAAK,EACVwQ,EAAKxQ,EAAI,IACTgQ,EAAUzL,KAAKiM,GACfR,EAAUzL,KAAKgM,GAGjB,OAAOP,EAv7BWS,CAAepE,EAAQ2C,EAAIjL,OAASsL,GAASL,EAAKK,EAAQtL,GA+E9E,SAASkK,EAAYe,EAAKrB,EAAOC,GAC/B,OAAc,IAAVD,GAAeC,IAAQoB,EAAIjL,OACtBiH,EAAO0F,cAAc1B,GAErBhE,EAAO0F,cAAc1B,EAAIrG,MAAMgF,EAAOC,IAIjD,SAASE,EAAUkB,EAAKrB,EAAOC,GAC7BA,EAAMrI,KAAKsE,IAAImF,EAAIjL,OAAQ6J,GAI3B,IAHA,IAAI+C,EAAM,GACNhR,EAAIgO,EAEDhO,EAAIiO,GAAK,CACd,IAKMgD,EAAYC,EAAWC,EAAYC,EALrCC,EAAYhC,EAAIrP,GAChBsR,EAAY,KACZC,EAAmBF,EAAY,IAAO,EAAIA,EAAY,IAAO,EAAIA,EAAY,IAAO,EAAI,EAE5F,GAAIrR,EAAIuR,GAAoBtD,EAG1B,OAAQsD,GACN,KAAK,EACCF,EAAY,MACdC,EAAYD,GAGd,MAEF,KAAK,EAGyB,MAAV,KAFlBJ,EAAa5B,EAAIrP,EAAI,OAGnBoR,GAA6B,GAAZC,IAAqB,EAAmB,GAAbJ,GAExB,MAClBK,EAAYF,GAIhB,MAEF,KAAK,EACHH,EAAa5B,EAAIrP,EAAI,GACrBkR,EAAY7B,EAAIrP,EAAI,GAEQ,MAAV,IAAbiR,IAAsD,MAAV,IAAZC,KACnCE,GAA6B,GAAZC,IAAoB,IAAoB,GAAbJ,IAAsB,EAAkB,GAAZC,GAEpD,OAAUE,EAAgB,OAAUA,EAAgB,SACtEE,EAAYF,GAIhB,MAEF,KAAK,EACHH,EAAa5B,EAAIrP,EAAI,GACrBkR,EAAY7B,EAAIrP,EAAI,GACpBmR,EAAa9B,EAAIrP,EAAI,GAEO,MAAV,IAAbiR,IAAsD,MAAV,IAAZC,IAAsD,MAAV,IAAbC,KAClEC,GAA6B,GAAZC,IAAoB,IAAqB,GAAbJ,IAAsB,IAAmB,GAAZC,IAAqB,EAAmB,GAAbC,GAEjF,OAAUC,EAAgB,UAC5CE,EAAYF,GAOJ,OAAdE,GAGFA,EAAY,MACZC,EAAmB,GACVD,EAAY,QAErBA,GAAa,MACbN,EAAIpM,KAAK0M,IAAc,GAAK,KAAQ,OACpCA,EAAY,MAAqB,KAAZA,GAGvBN,EAAIpM,KAAK0M,GACTtR,GAAKuR,EAGP,OAQF,SAA+BC,GAC7B,IAAIvE,EAAMuE,EAAWpN,OAErB,GAAI6I,GALqB,KAMvB,OAAOkC,OAAOsC,aAAaC,MAAMvC,OAAQqC,GAI3C,IAAIR,EAAM,GACNhR,EAAI,EAER,KAAOA,EAAIiN,GACT+D,GAAO7B,OAAOsC,aAAaC,MAAMvC,OAAQqC,EAAWxI,MAAMhJ,EAAGA,GAdtC,OAiBzB,OAAOgR,EAvBAW,CAAsBX,GA1gC/BxR,EAAQ8K,OAASA,EACjB9K,EAAQoS,WAiUR,SAAoBxN,IACbA,GAAUA,IAEbA,EAAS,GAGX,OAAOkG,EAAOuH,OAAOzN,IAtUvB5E,EAAQsS,kBAAoB,GA0B5BxH,EAAOmB,yBAAqD5D,IAA/BkK,EAAOtG,oBAAoCsG,EAAOtG,oBAO/E,WACE,IACE,IAAIsD,EAAM,IAAIlD,WAAW,GAOzB,OANAkD,EAAIjD,UAAY,CACdA,UAAWD,WAAWjK,UACtBoQ,IAAK,WACH,OAAO,KAGU,KAAdjD,EAAIiD,OACa,mBAAjBjD,EAAIkD,UACuB,IAAlClD,EAAIkD,SAAS,EAAG,GAAG1F,WACnB,MAAO2F,GACP,OAAO,GApB0FC,GAKrG3S,EAAQgM,WAAaA,IAuErBlB,EAAO8H,SAAW,KAGlB9H,EAAO+H,SAAW,SAAUtD,GAE1B,OADAA,EAAIjD,UAAYxB,EAAO1I,UAChBmN,GA4BTzE,EAAO4B,KAAO,SAAUjL,EAAO+K,EAAkB5H,GAC/C,OAAO8H,EAAK,KAAMjL,EAAO+K,EAAkB5H,IAGzCkG,EAAOmB,sBACTnB,EAAO1I,UAAUkK,UAAYD,WAAWjK,UACxC0I,EAAOwB,UAAYD,WAEG,oBAAX9K,QAA0BA,OAAOuR,SAAWhI,EAAOvJ,OAAOuR,WAAahI,GAEhF5J,OAAOC,eAAe2J,EAAQvJ,OAAOuR,QAAS,CAC5CrR,MAAO,KACPsR,cAAc,KAmCpBjI,EAAOuH,MAAQ,SAAUrE,EAAMgF,EAAM7F,GACnC,OAvBF,SAAehB,EAAM6B,EAAMgF,EAAM7F,GAG/B,OAFAY,EAAWC,GAEPA,GAAQ,EACH9B,EAAaC,EAAM6B,QAGf3F,IAAT2K,EAIyB,iBAAb7F,EAAwBjB,EAAaC,EAAM6B,GAAMgF,KAAKA,EAAM7F,GAAYjB,EAAaC,EAAM6B,GAAMgF,KAAKA,GAG/G9G,EAAaC,EAAM6B,GASnBqE,CAAM,KAAMrE,EAAMgF,EAAM7F,IAoBjCrC,EAAO2B,YAAc,SAAUuB,GAC7B,OAAOvB,EAAY,KAAMuB,IAO3BlD,EAAOmI,gBAAkB,SAAUjF,GACjC,OAAOvB,EAAY,KAAMuB,IAqH3BlD,EAAOC,SAAW,SAAkBnD,GAClC,QAAe,MAALA,IAAaA,EAAEsL,YAG3BpI,EAAOqI,QAAU,SAAiBxL,EAAGC,GACnC,IAAKkD,EAAOC,SAASpD,KAAOmD,EAAOC,SAASnD,GAC1C,MAAM,IAAI+E,UAAU,6BAGtB,GAAIhF,IAAMC,EAAG,OAAO,EAIpB,IAHA,IAAIwL,EAAIzL,EAAE/C,OACNyO,EAAIzL,EAAEhD,OAEDpE,EAAI,EAAGiN,EAAMrH,KAAKsE,IAAI0I,EAAGC,GAAI7S,EAAIiN,IAAOjN,EAC/C,GAAImH,EAAEnH,KAAOoH,EAAEpH,GAAI,CACjB4S,EAAIzL,EAAEnH,GACN6S,EAAIzL,EAAEpH,GACN,MAIJ,OAAI4S,EAAIC,GAAW,EACfA,EAAID,EAAU,EACX,GAGTtI,EAAOsC,WAAa,SAAoBD,GACtC,OAAQwC,OAAOxC,GAAUmB,eACvB,IAAK,MACL,IAAK,OACL,IAAK,QACL,IAAK,QACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAO,EAET,QACE,OAAO,IAIbxD,EAAOf,OAAS,SAAgBuJ,EAAM1O,GACpC,IAAKmH,EAAQuH,GACX,MAAM,IAAI3G,UAAU,+CAGtB,GAAoB,IAAhB2G,EAAK1O,OACP,OAAOkG,EAAOuH,MAAM,GAGtB,IAAI7R,EAEJ,QAAe6H,IAAXzD,EAGF,IAFAA,EAAS,EAEJpE,EAAI,EAAGA,EAAI8S,EAAK1O,SAAUpE,EAC7BoE,GAAU0O,EAAK9S,GAAGoE,OAItB,IAAIgH,EAASd,EAAO2B,YAAY7H,GAC5BP,EAAM,EAEV,IAAK7D,EAAI,EAAGA,EAAI8S,EAAK1O,SAAUpE,EAAG,CAChC,IAAIqP,EAAMyD,EAAK9S,GAEf,IAAKsK,EAAOC,SAAS8E,GACnB,MAAM,IAAIlD,UAAU,+CAGtBkD,EAAIlC,KAAK/B,EAAQvH,GACjBA,GAAOwL,EAAIjL,OAGb,OAAOgH,GAsDTd,EAAOiC,WAAaA,EAyEpBjC,EAAO1I,UAAU8Q,WAAY,EAQ7BpI,EAAO1I,UAAUmR,OAAS,WACxB,IAAI9F,EAAMtK,KAAKyB,OAEf,GAAI6I,EAAM,GAAM,EACd,MAAM,IAAIrB,WAAW,6CAGvB,IAAK,IAAI5L,EAAI,EAAGA,EAAIiN,EAAKjN,GAAK,EAC5BwO,EAAK7L,KAAM3C,EAAGA,EAAI,GAGpB,OAAO2C,MAGT2H,EAAO1I,UAAUoR,OAAS,WACxB,IAAI/F,EAAMtK,KAAKyB,OAEf,GAAI6I,EAAM,GAAM,EACd,MAAM,IAAIrB,WAAW,6CAGvB,IAAK,IAAI5L,EAAI,EAAGA,EAAIiN,EAAKjN,GAAK,EAC5BwO,EAAK7L,KAAM3C,EAAGA,EAAI,GAClBwO,EAAK7L,KAAM3C,EAAI,EAAGA,EAAI,GAGxB,OAAO2C,MAGT2H,EAAO1I,UAAUqR,OAAS,WACxB,IAAIhG,EAAMtK,KAAKyB,OAEf,GAAI6I,EAAM,GAAM,EACd,MAAM,IAAIrB,WAAW,6CAGvB,IAAK,IAAI5L,EAAI,EAAGA,EAAIiN,EAAKjN,GAAK,EAC5BwO,EAAK7L,KAAM3C,EAAGA,EAAI,GAClBwO,EAAK7L,KAAM3C,EAAI,EAAGA,EAAI,GACtBwO,EAAK7L,KAAM3C,EAAI,EAAGA,EAAI,GACtBwO,EAAK7L,KAAM3C,EAAI,EAAGA,EAAI,GAGxB,OAAO2C,MAGT2H,EAAO1I,UAAU6L,SAAW,WAC1B,IAAIrJ,EAAuB,EAAdzB,KAAKyB,OAClB,OAAe,IAAXA,EAAqB,GACA,IAArB8O,UAAU9O,OAAqB+J,EAAUxL,KAAM,EAAGyB,GAC/C2J,EAAa2D,MAAM/O,KAAMuQ,YAGlC5I,EAAO1I,UAAUuR,OAAS,SAAgB/L,GACxC,IAAKkD,EAAOC,SAASnD,GAAI,MAAM,IAAI+E,UAAU,6BAC7C,OAAIxJ,OAASyE,GACsB,IAA5BkD,EAAOqI,QAAQhQ,KAAMyE,IAG9BkD,EAAO1I,UAAUwR,QAAU,WACzB,IAAIhD,EAAM,GACNiD,EAAM7T,EAAQsS,kBAOlB,OALInP,KAAKyB,OAAS,IAChBgM,EAAMzN,KAAK8K,SAAS,MAAO,EAAG4F,GAAKC,MAAM,SAASC,KAAK,KACnD5Q,KAAKyB,OAASiP,IAAKjD,GAAO,UAGzB,WAAaA,EAAM,KAG5B9F,EAAO1I,UAAU+Q,QAAU,SAAiBa,EAAQxF,EAAOC,EAAKwF,EAAWC,GACzE,IAAKpJ,EAAOC,SAASiJ,GACnB,MAAM,IAAIrH,UAAU,6BAmBtB,QAhBctE,IAAVmG,IACFA,EAAQ,QAGEnG,IAARoG,IACFA,EAAMuF,EAASA,EAAOpP,OAAS,QAGfyD,IAAd4L,IACFA,EAAY,QAGE5L,IAAZ6L,IACFA,EAAU/Q,KAAKyB,QAGb4J,EAAQ,GAAKC,EAAMuF,EAAOpP,QAAUqP,EAAY,GAAKC,EAAU/Q,KAAKyB,OACtE,MAAM,IAAIwH,WAAW,sBAGvB,GAAI6H,GAAaC,GAAW1F,GAASC,EACnC,OAAO,EAGT,GAAIwF,GAAaC,EACf,OAAQ,EAGV,GAAI1F,GAASC,EACX,OAAO,EAOT,GAAItL,OAAS6Q,EAAQ,OAAO,EAO5B,IANA,IAAIZ,GAFJc,KAAa,IADbD,KAAe,GAIXZ,GALJ5E,KAAS,IADTD,KAAW,GAOPf,EAAMrH,KAAKsE,IAAI0I,EAAGC,GAClBc,EAAWhR,KAAKqG,MAAMyK,EAAWC,GACjCE,EAAaJ,EAAOxK,MAAMgF,EAAOC,GAE5BjO,EAAI,EAAGA,EAAIiN,IAAOjN,EACzB,GAAI2T,EAAS3T,KAAO4T,EAAW5T,GAAI,CACjC4S,EAAIe,EAAS3T,GACb6S,EAAIe,EAAW5T,GACf,MAIJ,OAAI4S,EAAIC,GAAW,EACfA,EAAID,EAAU,EACX,GAqITtI,EAAO1I,UAAUiS,SAAW,SAAkBzG,EAAKd,EAAYK,GAC7D,OAAoD,IAA7ChK,KAAKkM,QAAQzB,EAAKd,EAAYK,IAGvCrC,EAAO1I,UAAUiN,QAAU,SAAiBzB,EAAKd,EAAYK,GAC3D,OAAO8B,EAAqB9L,KAAMyK,EAAKd,EAAYK,GAAU,IAG/DrC,EAAO1I,UAAUkN,YAAc,SAAqB1B,EAAKd,EAAYK,GACnE,OAAO8B,EAAqB9L,KAAMyK,EAAKd,EAAYK,GAAU,IAsD/DrC,EAAO1I,UAAUkL,MAAQ,SAAeJ,EAAQgD,EAAQtL,EAAQuI,GAE9D,QAAe9E,IAAX6H,EACF/C,EAAW,OACXvI,EAASzB,KAAKyB,OACdsL,EAAS,OACJ,QAAe7H,IAAXzD,GAA0C,iBAAXsL,EACxC/C,EAAW+C,EACXtL,EAASzB,KAAKyB,OACdsL,EAAS,MACJ,KAAIoE,SAASpE,GAYlB,MAAM,IAAIxM,MAAM,2EAXhBwM,GAAkB,EAEdoE,SAAS1P,IACXA,GAAkB,OACDyD,IAAb8E,IAAwBA,EAAW,UAEvCA,EAAWvI,EACXA,OAASyD,GAOb,IAAI+H,EAAYjN,KAAKyB,OAASsL,EAG9B,SAFe7H,IAAXzD,GAAwBA,EAASwL,KAAWxL,EAASwL,GAErDlD,EAAOtI,OAAS,IAAMA,EAAS,GAAKsL,EAAS,IAAMA,EAAS/M,KAAKyB,OACnE,MAAM,IAAIwH,WAAW,0CAGlBe,IAAUA,EAAW,QAG1B,IAFA,IAAIgB,GAAc,IAGhB,OAAQhB,GACN,IAAK,MACH,OAAO8C,EAAS9M,KAAM+J,EAAQgD,EAAQtL,GAExC,IAAK,OACL,IAAK,QACH,OAAO6L,EAAUtN,KAAM+J,EAAQgD,EAAQtL,GAEzC,IAAK,QACH,OAAO+L,EAAWxN,KAAM+J,EAAQgD,EAAQtL,GAE1C,IAAK,SACL,IAAK,SACH,OAAOoM,EAAY7N,KAAM+J,EAAQgD,EAAQtL,GAE3C,IAAK,SAEH,OAAOqM,EAAY9N,KAAM+J,EAAQgD,EAAQtL,GAE3C,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAOsM,EAAU/N,KAAM+J,EAAQgD,EAAQtL,GAEzC,QACE,GAAIuJ,EAAa,MAAM,IAAIxB,UAAU,qBAAuBQ,GAC5DA,GAAY,GAAKA,GAAUmB,cAC3BH,GAAc,IAKtBrD,EAAO1I,UAAUyD,OAAS,WACxB,MAAO,CACLgI,KAAM,SACNlE,KAAMZ,MAAM3G,UAAUoH,MAAM7I,KAAKwC,KAAKoR,MAAQpR,KAAM,KAsHxD,SAASyL,EAAWiB,EAAKrB,EAAOC,GAC9B,IAAI+F,EAAM,GACV/F,EAAMrI,KAAKsE,IAAImF,EAAIjL,OAAQ6J,GAE3B,IAAK,IAAIjO,EAAIgO,EAAOhO,EAAIiO,IAAOjO,EAC7BgU,GAAO7E,OAAOsC,aAAsB,IAATpC,EAAIrP,IAGjC,OAAOgU,EAGT,SAAS3F,EAAYgB,EAAKrB,EAAOC,GAC/B,IAAI+F,EAAM,GACV/F,EAAMrI,KAAKsE,IAAImF,EAAIjL,OAAQ6J,GAE3B,IAAK,IAAIjO,EAAIgO,EAAOhO,EAAIiO,IAAOjO,EAC7BgU,GAAO7E,OAAOsC,aAAapC,EAAIrP,IAGjC,OAAOgU,EAGT,SAAS9F,EAASmB,EAAKrB,EAAOC,GAC5B,IAAIhB,EAAMoC,EAAIjL,SACT4J,GAASA,EAAQ,KAAGA,EAAQ,KAC5BC,GAAOA,EAAM,GAAKA,EAAMhB,KAAKgB,EAAMhB,GAGxC,IAFA,IAAIgH,EAAM,GAEDjU,EAAIgO,EAAOhO,EAAIiO,IAAOjO,EAC7BiU,GAAOC,EAAM7E,EAAIrP,IAGnB,OAAOiU,EAGT,SAAS1F,EAAac,EAAKrB,EAAOC,GAIhC,IAHA,IAAIvE,EAAQ2F,EAAIrG,MAAMgF,EAAOC,GACzB+C,EAAM,GAEDhR,EAAI,EAAGA,EAAI0J,EAAMtF,OAAQpE,GAAK,EACrCgR,GAAO7B,OAAOsC,aAAa/H,EAAM1J,GAAoB,IAAf0J,EAAM1J,EAAI,IAGlD,OAAOgR,EA4CT,SAASmD,EAAYzE,EAAQ0E,EAAKhQ,GAChC,GAAIsL,EAAS,GAAM,GAAKA,EAAS,EAAG,MAAM,IAAI9D,WAAW,sBACzD,GAAI8D,EAAS0E,EAAMhQ,EAAQ,MAAM,IAAIwH,WAAW,yCA+IlD,SAASyI,EAAShF,EAAKpO,EAAOyO,EAAQ0E,EAAKf,EAAKnJ,GAC9C,IAAKI,EAAOC,SAAS8E,GAAM,MAAM,IAAIlD,UAAU,+CAC/C,GAAIlL,EAAQoS,GAAOpS,EAAQiJ,EAAK,MAAM,IAAI0B,WAAW,qCACrD,GAAI8D,EAAS0E,EAAM/E,EAAIjL,OAAQ,MAAM,IAAIwH,WAAW,sBAsDtD,SAAS0I,EAAkBjF,EAAKpO,EAAOyO,EAAQ6E,GACzCtT,EAAQ,IAAGA,EAAQ,MAASA,EAAQ,GAExC,IAAK,IAAIjB,EAAI,EAAGwP,EAAI5J,KAAKsE,IAAImF,EAAIjL,OAASsL,EAAQ,GAAI1P,EAAIwP,IAAKxP,EAC7DqP,EAAIK,EAAS1P,IAAMiB,EAAQ,KAAQ,GAAKsT,EAAevU,EAAI,EAAIA,MAAqC,GAA5BuU,EAAevU,EAAI,EAAIA,GAkCnG,SAASwU,EAAkBnF,EAAKpO,EAAOyO,EAAQ6E,GACzCtT,EAAQ,IAAGA,EAAQ,WAAaA,EAAQ,GAE5C,IAAK,IAAIjB,EAAI,EAAGwP,EAAI5J,KAAKsE,IAAImF,EAAIjL,OAASsL,EAAQ,GAAI1P,EAAIwP,IAAKxP,EAC7DqP,EAAIK,EAAS1P,GAAKiB,IAAuC,GAA5BsT,EAAevU,EAAI,EAAIA,GAAS,IAmKjE,SAASyU,EAAapF,EAAKpO,EAAOyO,EAAQ0E,EAAKf,EAAKnJ,GAClD,GAAIwF,EAAS0E,EAAM/E,EAAIjL,OAAQ,MAAM,IAAIwH,WAAW,sBACpD,GAAI8D,EAAS,EAAG,MAAM,IAAI9D,WAAW,sBAGvC,SAAS8I,EAAWrF,EAAKpO,EAAOyO,EAAQ6E,EAAcI,GAMpD,OALKA,GACHF,EAAapF,EAAKpO,EAAOyO,EAAQ,GAGnCpE,EAAQwB,MAAMuC,EAAKpO,EAAOyO,EAAQ6E,EAAc,GAAI,GAC7C7E,EAAS,EAWlB,SAASkF,EAAYvF,EAAKpO,EAAOyO,EAAQ6E,EAAcI,GAMrD,OALKA,GACHF,EAAapF,EAAKpO,EAAOyO,EAAQ,GAGnCpE,EAAQwB,MAAMuC,EAAKpO,EAAOyO,EAAQ6E,EAAc,GAAI,GAC7C7E,EAAS,EA5dlBpF,EAAO1I,UAAUoH,MAAQ,SAAegF,EAAOC,GAC7C,IAmBI4G,EAnBA5H,EAAMtK,KAAKyB,OAqBf,IApBA4J,IAAUA,GAGE,GACVA,GAASf,GACG,IAAGe,EAAQ,GACdA,EAAQf,IACjBe,EAAQf,IANVgB,OAAcpG,IAARoG,EAAoBhB,IAAQgB,GASxB,GACRA,GAAOhB,GACG,IAAGgB,EAAM,GACVA,EAAMhB,IACfgB,EAAMhB,GAGJgB,EAAMD,IAAOC,EAAMD,GAGnB1D,EAAOmB,qBACToJ,EAASlS,KAAKsP,SAASjE,EAAOC,IACvBnC,UAAYxB,EAAO1I,cACrB,CACL,IAAIkT,EAAW7G,EAAMD,EACrB6G,EAAS,IAAIvK,EAAOwK,OAAUjN,GAE9B,IAAK,IAAI7H,EAAI,EAAGA,EAAI8U,IAAY9U,EAC9B6U,EAAO7U,GAAK2C,KAAK3C,EAAIgO,GAIzB,OAAO6G,GAYTvK,EAAO1I,UAAUmT,WAAa,SAAoBrF,EAAQnD,EAAYoI,GACpEjF,GAAkB,EAClBnD,GAA0B,EACrBoI,GAAUR,EAAYzE,EAAQnD,EAAY5J,KAAKyB,QAKpD,IAJA,IAAIgJ,EAAMzK,KAAK+M,GACXsF,EAAM,EACNhV,EAAI,IAECA,EAAIuM,IAAeyI,GAAO,MACjC5H,GAAOzK,KAAK+M,EAAS1P,GAAKgV,EAG5B,OAAO5H,GAGT9C,EAAO1I,UAAUqT,WAAa,SAAoBvF,EAAQnD,EAAYoI,GACpEjF,GAAkB,EAClBnD,GAA0B,EAErBoI,GACHR,EAAYzE,EAAQnD,EAAY5J,KAAKyB,QAMvC,IAHA,IAAIgJ,EAAMzK,KAAK+M,IAAWnD,GACtByI,EAAM,EAEHzI,EAAa,IAAMyI,GAAO,MAC/B5H,GAAOzK,KAAK+M,IAAWnD,GAAcyI,EAGvC,OAAO5H,GAGT9C,EAAO1I,UAAUsT,UAAY,SAAmBxF,EAAQiF,GAEtD,OADKA,GAAUR,EAAYzE,EAAQ,EAAG/M,KAAKyB,QACpCzB,KAAK+M,IAGdpF,EAAO1I,UAAUuT,aAAe,SAAsBzF,EAAQiF,GAE5D,OADKA,GAAUR,EAAYzE,EAAQ,EAAG/M,KAAKyB,QACpCzB,KAAK+M,GAAU/M,KAAK+M,EAAS,IAAM,GAG5CpF,EAAO1I,UAAU0N,aAAe,SAAsBI,EAAQiF,GAE5D,OADKA,GAAUR,EAAYzE,EAAQ,EAAG/M,KAAKyB,QACpCzB,KAAK+M,IAAW,EAAI/M,KAAK+M,EAAS,IAG3CpF,EAAO1I,UAAUwT,aAAe,SAAsB1F,EAAQiF,GAE5D,OADKA,GAAUR,EAAYzE,EAAQ,EAAG/M,KAAKyB,SACnCzB,KAAK+M,GAAU/M,KAAK+M,EAAS,IAAM,EAAI/M,KAAK+M,EAAS,IAAM,IAAyB,SAAnB/M,KAAK+M,EAAS,IAGzFpF,EAAO1I,UAAUyT,aAAe,SAAsB3F,EAAQiF,GAE5D,OADKA,GAAUR,EAAYzE,EAAQ,EAAG/M,KAAKyB,QACrB,SAAfzB,KAAK+M,IAAuB/M,KAAK+M,EAAS,IAAM,GAAK/M,KAAK+M,EAAS,IAAM,EAAI/M,KAAK+M,EAAS,KAGpGpF,EAAO1I,UAAU0T,UAAY,SAAmB5F,EAAQnD,EAAYoI,GAClEjF,GAAkB,EAClBnD,GAA0B,EACrBoI,GAAUR,EAAYzE,EAAQnD,EAAY5J,KAAKyB,QAKpD,IAJA,IAAIgJ,EAAMzK,KAAK+M,GACXsF,EAAM,EACNhV,EAAI,IAECA,EAAIuM,IAAeyI,GAAO,MACjC5H,GAAOzK,KAAK+M,EAAS1P,GAAKgV,EAK5B,OADI5H,IADJ4H,GAAO,OACS5H,GAAOxH,KAAKC,IAAI,EAAG,EAAI0G,IAChCa,GAGT9C,EAAO1I,UAAU2T,UAAY,SAAmB7F,EAAQnD,EAAYoI,GAClEjF,GAAkB,EAClBnD,GAA0B,EACrBoI,GAAUR,EAAYzE,EAAQnD,EAAY5J,KAAKyB,QAKpD,IAJA,IAAIpE,EAAIuM,EACJyI,EAAM,EACN5H,EAAMzK,KAAK+M,IAAW1P,GAEnBA,EAAI,IAAMgV,GAAO,MACtB5H,GAAOzK,KAAK+M,IAAW1P,GAAKgV,EAK9B,OADI5H,IADJ4H,GAAO,OACS5H,GAAOxH,KAAKC,IAAI,EAAG,EAAI0G,IAChCa,GAGT9C,EAAO1I,UAAU4T,SAAW,SAAkB9F,EAAQiF,GAEpD,OADKA,GAAUR,EAAYzE,EAAQ,EAAG/M,KAAKyB,QACtB,IAAfzB,KAAK+M,IACyB,GAA5B,IAAO/M,KAAK+M,GAAU,GADK/M,KAAK+M,IAI1CpF,EAAO1I,UAAU6T,YAAc,SAAqB/F,EAAQiF,GACrDA,GAAUR,EAAYzE,EAAQ,EAAG/M,KAAKyB,QAC3C,IAAIgJ,EAAMzK,KAAK+M,GAAU/M,KAAK+M,EAAS,IAAM,EAC7C,OAAa,MAANtC,EAAqB,WAANA,EAAmBA,GAG3C9C,EAAO1I,UAAU8T,YAAc,SAAqBhG,EAAQiF,GACrDA,GAAUR,EAAYzE,EAAQ,EAAG/M,KAAKyB,QAC3C,IAAIgJ,EAAMzK,KAAK+M,EAAS,GAAK/M,KAAK+M,IAAW,EAC7C,OAAa,MAANtC,EAAqB,WAANA,EAAmBA,GAG3C9C,EAAO1I,UAAU+T,YAAc,SAAqBjG,EAAQiF,GAE1D,OADKA,GAAUR,EAAYzE,EAAQ,EAAG/M,KAAKyB,QACpCzB,KAAK+M,GAAU/M,KAAK+M,EAAS,IAAM,EAAI/M,KAAK+M,EAAS,IAAM,GAAK/M,KAAK+M,EAAS,IAAM,IAG7FpF,EAAO1I,UAAUgU,YAAc,SAAqBlG,EAAQiF,GAE1D,OADKA,GAAUR,EAAYzE,EAAQ,EAAG/M,KAAKyB,QACpCzB,KAAK+M,IAAW,GAAK/M,KAAK+M,EAAS,IAAM,GAAK/M,KAAK+M,EAAS,IAAM,EAAI/M,KAAK+M,EAAS,IAG7FpF,EAAO1I,UAAUiU,YAAc,SAAqBnG,EAAQiF,GAE1D,OADKA,GAAUR,EAAYzE,EAAQ,EAAG/M,KAAKyB,QACpCkH,EAAQ8D,KAAKzM,KAAM+M,GAAQ,EAAM,GAAI,IAG9CpF,EAAO1I,UAAUkU,YAAc,SAAqBpG,EAAQiF,GAE1D,OADKA,GAAUR,EAAYzE,EAAQ,EAAG/M,KAAKyB,QACpCkH,EAAQ8D,KAAKzM,KAAM+M,GAAQ,EAAO,GAAI,IAG/CpF,EAAO1I,UAAUmU,aAAe,SAAsBrG,EAAQiF,GAE5D,OADKA,GAAUR,EAAYzE,EAAQ,EAAG/M,KAAKyB,QACpCkH,EAAQ8D,KAAKzM,KAAM+M,GAAQ,EAAM,GAAI,IAG9CpF,EAAO1I,UAAUoU,aAAe,SAAsBtG,EAAQiF,GAE5D,OADKA,GAAUR,EAAYzE,EAAQ,EAAG/M,KAAKyB,QACpCkH,EAAQ8D,KAAKzM,KAAM+M,GAAQ,EAAO,GAAI,IAS/CpF,EAAO1I,UAAUqU,YAAc,SAAqBhV,EAAOyO,EAAQnD,EAAYoI,IAC7E1T,GAASA,EACTyO,GAAkB,EAClBnD,GAA0B,EAErBoI,IAEHN,EAAS1R,KAAM1B,EAAOyO,EAAQnD,EADf3G,KAAKC,IAAI,EAAG,EAAI0G,GAAc,EACO,GAGtD,IAAIyI,EAAM,EACNhV,EAAI,EAGR,IAFA2C,KAAK+M,GAAkB,IAARzO,IAENjB,EAAIuM,IAAeyI,GAAO,MACjCrS,KAAK+M,EAAS1P,GAAKiB,EAAQ+T,EAAM,IAGnC,OAAOtF,EAASnD,GAGlBjC,EAAO1I,UAAUsU,YAAc,SAAqBjV,EAAOyO,EAAQnD,EAAYoI,IAC7E1T,GAASA,EACTyO,GAAkB,EAClBnD,GAA0B,EAErBoI,IAEHN,EAAS1R,KAAM1B,EAAOyO,EAAQnD,EADf3G,KAAKC,IAAI,EAAG,EAAI0G,GAAc,EACO,GAGtD,IAAIvM,EAAIuM,EAAa,EACjByI,EAAM,EAGV,IAFArS,KAAK+M,EAAS1P,GAAa,IAARiB,IAEVjB,GAAK,IAAMgV,GAAO,MACzBrS,KAAK+M,EAAS1P,GAAKiB,EAAQ+T,EAAM,IAGnC,OAAOtF,EAASnD,GAGlBjC,EAAO1I,UAAUuU,WAAa,SAAoBlV,EAAOyO,EAAQiF,GAM/D,OALA1T,GAASA,EACTyO,GAAkB,EACbiF,GAAUN,EAAS1R,KAAM1B,EAAOyO,EAAQ,EAAG,IAAM,GACjDpF,EAAOmB,sBAAqBxK,EAAQ2E,KAAKqD,MAAMhI,IACpD0B,KAAK+M,GAAkB,IAARzO,EACRyO,EAAS,GAWlBpF,EAAO1I,UAAUwU,cAAgB,SAAuBnV,EAAOyO,EAAQiF,GAYrE,OAXA1T,GAASA,EACTyO,GAAkB,EACbiF,GAAUN,EAAS1R,KAAM1B,EAAOyO,EAAQ,EAAG,MAAQ,GAEpDpF,EAAOmB,qBACT9I,KAAK+M,GAAkB,IAARzO,EACf0B,KAAK+M,EAAS,GAAKzO,IAAU,GAE7BqT,EAAkB3R,KAAM1B,EAAOyO,GAAQ,GAGlCA,EAAS,GAGlBpF,EAAO1I,UAAUyU,cAAgB,SAAuBpV,EAAOyO,EAAQiF,GAYrE,OAXA1T,GAASA,EACTyO,GAAkB,EACbiF,GAAUN,EAAS1R,KAAM1B,EAAOyO,EAAQ,EAAG,MAAQ,GAEpDpF,EAAOmB,qBACT9I,KAAK+M,GAAUzO,IAAU,EACzB0B,KAAK+M,EAAS,GAAa,IAARzO,GAEnBqT,EAAkB3R,KAAM1B,EAAOyO,GAAQ,GAGlCA,EAAS,GAWlBpF,EAAO1I,UAAU0U,cAAgB,SAAuBrV,EAAOyO,EAAQiF,GAcrE,OAbA1T,GAASA,EACTyO,GAAkB,EACbiF,GAAUN,EAAS1R,KAAM1B,EAAOyO,EAAQ,EAAG,WAAY,GAExDpF,EAAOmB,qBACT9I,KAAK+M,EAAS,GAAKzO,IAAU,GAC7B0B,KAAK+M,EAAS,GAAKzO,IAAU,GAC7B0B,KAAK+M,EAAS,GAAKzO,IAAU,EAC7B0B,KAAK+M,GAAkB,IAARzO,GAEfuT,EAAkB7R,KAAM1B,EAAOyO,GAAQ,GAGlCA,EAAS,GAGlBpF,EAAO1I,UAAU2U,cAAgB,SAAuBtV,EAAOyO,EAAQiF,GAcrE,OAbA1T,GAASA,EACTyO,GAAkB,EACbiF,GAAUN,EAAS1R,KAAM1B,EAAOyO,EAAQ,EAAG,WAAY,GAExDpF,EAAOmB,qBACT9I,KAAK+M,GAAUzO,IAAU,GACzB0B,KAAK+M,EAAS,GAAKzO,IAAU,GAC7B0B,KAAK+M,EAAS,GAAKzO,IAAU,EAC7B0B,KAAK+M,EAAS,GAAa,IAARzO,GAEnBuT,EAAkB7R,KAAM1B,EAAOyO,GAAQ,GAGlCA,EAAS,GAGlBpF,EAAO1I,UAAU4U,WAAa,SAAoBvV,EAAOyO,EAAQnD,EAAYoI,GAI3E,GAHA1T,GAASA,EACTyO,GAAkB,GAEbiF,EAAU,CACb,IAAI8B,EAAQ7Q,KAAKC,IAAI,EAAG,EAAI0G,EAAa,GACzC8H,EAAS1R,KAAM1B,EAAOyO,EAAQnD,EAAYkK,EAAQ,GAAIA,GAGxD,IAAIzW,EAAI,EACJgV,EAAM,EACN0B,EAAM,EAGV,IAFA/T,KAAK+M,GAAkB,IAARzO,IAENjB,EAAIuM,IAAeyI,GAAO,MAC7B/T,EAAQ,GAAa,IAARyV,GAAsC,IAAzB/T,KAAK+M,EAAS1P,EAAI,KAC9C0W,EAAM,GAGR/T,KAAK+M,EAAS1P,IAAMiB,EAAQ+T,GAAO,GAAK0B,EAAM,IAGhD,OAAOhH,EAASnD,GAGlBjC,EAAO1I,UAAU+U,WAAa,SAAoB1V,EAAOyO,EAAQnD,EAAYoI,GAI3E,GAHA1T,GAASA,EACTyO,GAAkB,GAEbiF,EAAU,CACb,IAAI8B,EAAQ7Q,KAAKC,IAAI,EAAG,EAAI0G,EAAa,GACzC8H,EAAS1R,KAAM1B,EAAOyO,EAAQnD,EAAYkK,EAAQ,GAAIA,GAGxD,IAAIzW,EAAIuM,EAAa,EACjByI,EAAM,EACN0B,EAAM,EAGV,IAFA/T,KAAK+M,EAAS1P,GAAa,IAARiB,IAEVjB,GAAK,IAAMgV,GAAO,MACrB/T,EAAQ,GAAa,IAARyV,GAAsC,IAAzB/T,KAAK+M,EAAS1P,EAAI,KAC9C0W,EAAM,GAGR/T,KAAK+M,EAAS1P,IAAMiB,EAAQ+T,GAAO,GAAK0B,EAAM,IAGhD,OAAOhH,EAASnD,GAGlBjC,EAAO1I,UAAUgV,UAAY,SAAmB3V,EAAOyO,EAAQiF,GAO7D,OANA1T,GAASA,EACTyO,GAAkB,EACbiF,GAAUN,EAAS1R,KAAM1B,EAAOyO,EAAQ,EAAG,KAAO,KAClDpF,EAAOmB,sBAAqBxK,EAAQ2E,KAAKqD,MAAMhI,IAChDA,EAAQ,IAAGA,EAAQ,IAAOA,EAAQ,GACtC0B,KAAK+M,GAAkB,IAARzO,EACRyO,EAAS,GAGlBpF,EAAO1I,UAAUiV,aAAe,SAAsB5V,EAAOyO,EAAQiF,GAYnE,OAXA1T,GAASA,EACTyO,GAAkB,EACbiF,GAAUN,EAAS1R,KAAM1B,EAAOyO,EAAQ,EAAG,OAAS,OAErDpF,EAAOmB,qBACT9I,KAAK+M,GAAkB,IAARzO,EACf0B,KAAK+M,EAAS,GAAKzO,IAAU,GAE7BqT,EAAkB3R,KAAM1B,EAAOyO,GAAQ,GAGlCA,EAAS,GAGlBpF,EAAO1I,UAAUkV,aAAe,SAAsB7V,EAAOyO,EAAQiF,GAYnE,OAXA1T,GAASA,EACTyO,GAAkB,EACbiF,GAAUN,EAAS1R,KAAM1B,EAAOyO,EAAQ,EAAG,OAAS,OAErDpF,EAAOmB,qBACT9I,KAAK+M,GAAUzO,IAAU,EACzB0B,KAAK+M,EAAS,GAAa,IAARzO,GAEnBqT,EAAkB3R,KAAM1B,EAAOyO,GAAQ,GAGlCA,EAAS,GAGlBpF,EAAO1I,UAAUmV,aAAe,SAAsB9V,EAAOyO,EAAQiF,GAcnE,OAbA1T,GAASA,EACTyO,GAAkB,EACbiF,GAAUN,EAAS1R,KAAM1B,EAAOyO,EAAQ,EAAG,YAAa,YAEzDpF,EAAOmB,qBACT9I,KAAK+M,GAAkB,IAARzO,EACf0B,KAAK+M,EAAS,GAAKzO,IAAU,EAC7B0B,KAAK+M,EAAS,GAAKzO,IAAU,GAC7B0B,KAAK+M,EAAS,GAAKzO,IAAU,IAE7BuT,EAAkB7R,KAAM1B,EAAOyO,GAAQ,GAGlCA,EAAS,GAGlBpF,EAAO1I,UAAUoV,aAAe,SAAsB/V,EAAOyO,EAAQiF,GAenE,OAdA1T,GAASA,EACTyO,GAAkB,EACbiF,GAAUN,EAAS1R,KAAM1B,EAAOyO,EAAQ,EAAG,YAAa,YACzDzO,EAAQ,IAAGA,EAAQ,WAAaA,EAAQ,GAExCqJ,EAAOmB,qBACT9I,KAAK+M,GAAUzO,IAAU,GACzB0B,KAAK+M,EAAS,GAAKzO,IAAU,GAC7B0B,KAAK+M,EAAS,GAAKzO,IAAU,EAC7B0B,KAAK+M,EAAS,GAAa,IAARzO,GAEnBuT,EAAkB7R,KAAM1B,EAAOyO,GAAQ,GAGlCA,EAAS,GAiBlBpF,EAAO1I,UAAUqV,aAAe,SAAsBhW,EAAOyO,EAAQiF,GACnE,OAAOD,EAAW/R,KAAM1B,EAAOyO,GAAQ,EAAMiF,IAG/CrK,EAAO1I,UAAUsV,aAAe,SAAsBjW,EAAOyO,EAAQiF,GACnE,OAAOD,EAAW/R,KAAM1B,EAAOyO,GAAQ,EAAOiF,IAYhDrK,EAAO1I,UAAUuV,cAAgB,SAAuBlW,EAAOyO,EAAQiF,GACrE,OAAOC,EAAYjS,KAAM1B,EAAOyO,GAAQ,EAAMiF,IAGhDrK,EAAO1I,UAAUwV,cAAgB,SAAuBnW,EAAOyO,EAAQiF,GACrE,OAAOC,EAAYjS,KAAM1B,EAAOyO,GAAQ,EAAOiF,IAIjDrK,EAAO1I,UAAUuL,KAAO,SAAcqG,EAAQ6D,EAAarJ,EAAOC,GAOhE,GANKD,IAAOA,EAAQ,GACfC,GAAe,IAARA,IAAWA,EAAMtL,KAAKyB,QAC9BiT,GAAe7D,EAAOpP,SAAQiT,EAAc7D,EAAOpP,QAClDiT,IAAaA,EAAc,GAC5BpJ,EAAM,GAAKA,EAAMD,IAAOC,EAAMD,GAE9BC,IAAQD,EAAO,OAAO,EAC1B,GAAsB,IAAlBwF,EAAOpP,QAAgC,IAAhBzB,KAAKyB,OAAc,OAAO,EAErD,GAAIiT,EAAc,EAChB,MAAM,IAAIzL,WAAW,6BAGvB,GAAIoC,EAAQ,GAAKA,GAASrL,KAAKyB,OAAQ,MAAM,IAAIwH,WAAW,6BAC5D,GAAIqC,EAAM,EAAG,MAAM,IAAIrC,WAAW,2BAE9BqC,EAAMtL,KAAKyB,SAAQ6J,EAAMtL,KAAKyB,QAE9BoP,EAAOpP,OAASiT,EAAcpJ,EAAMD,IACtCC,EAAMuF,EAAOpP,OAASiT,EAAcrJ,GAGtC,IACIhO,EADAiN,EAAMgB,EAAMD,EAGhB,GAAIrL,OAAS6Q,GAAUxF,EAAQqJ,GAAeA,EAAcpJ,EAE1D,IAAKjO,EAAIiN,EAAM,EAAGjN,GAAK,IAAKA,EAC1BwT,EAAOxT,EAAIqX,GAAe1U,KAAK3C,EAAIgO,QAEhC,GAAIf,EAAM,MAAS3C,EAAOmB,oBAE/B,IAAKzL,EAAI,EAAGA,EAAIiN,IAAOjN,EACrBwT,EAAOxT,EAAIqX,GAAe1U,KAAK3C,EAAIgO,QAGrCnC,WAAWjK,UAAUuE,IAAIhG,KAAKqT,EAAQ7Q,KAAKsP,SAASjE,EAAOA,EAAQf,GAAMoK,GAG3E,OAAOpK,GAOT3C,EAAO1I,UAAU4Q,KAAO,SAAcpF,EAAKY,EAAOC,EAAKtB,GAErD,GAAmB,iBAARS,EAAkB,CAU3B,GATqB,iBAAVY,GACTrB,EAAWqB,EACXA,EAAQ,EACRC,EAAMtL,KAAKyB,QACa,iBAAR6J,IAChBtB,EAAWsB,EACXA,EAAMtL,KAAKyB,QAGM,IAAfgJ,EAAIhJ,OAAc,CACpB,IAAIkT,EAAOlK,EAAIkD,WAAW,GAEtBgH,EAAO,MACTlK,EAAMkK,GAIV,QAAiBzP,IAAb8E,GAA8C,iBAAbA,EACnC,MAAM,IAAIR,UAAU,6BAGtB,GAAwB,iBAAbQ,IAA0BrC,EAAOsC,WAAWD,GACrD,MAAM,IAAIR,UAAU,qBAAuBQ,OAErB,iBAARS,IAChBA,GAAY,KAId,GAAIY,EAAQ,GAAKrL,KAAKyB,OAAS4J,GAASrL,KAAKyB,OAAS6J,EACpD,MAAM,IAAIrC,WAAW,sBAGvB,GAAIqC,GAAOD,EACT,OAAOrL,KAMT,IAAI3C,EAEJ,GALAgO,KAAkB,EAClBC,OAAcpG,IAARoG,EAAoBtL,KAAKyB,OAAS6J,IAAQ,EAC3Cb,IAAKA,EAAM,GAGG,iBAARA,EACT,IAAKpN,EAAIgO,EAAOhO,EAAIiO,IAAOjO,EACzB2C,KAAK3C,GAAKoN,MAEP,CACL,IAAI1D,EAAQY,EAAOC,SAAS6C,GAAOA,EAAMQ,EAAY,IAAItD,EAAO8C,EAAKT,GAAUc,YAC3ER,EAAMvD,EAAMtF,OAEhB,IAAKpE,EAAI,EAAGA,EAAIiO,EAAMD,IAAShO,EAC7B2C,KAAK3C,EAAIgO,GAAStE,EAAM1J,EAAIiN,GAIhC,OAAOtK,MAKT,IAAI4U,EAAoB,qBAoBxB,SAASrD,EAAMzS,GACb,OAAIA,EAAI,GAAW,IAAMA,EAAEgM,SAAS,IAC7BhM,EAAEgM,SAAS,IAGpB,SAASG,EAAYlB,EAAQiE,GAE3B,IAAIW,EADJX,EAAQA,GAAS6G,IAMjB,IAJA,IAAIpT,EAASsI,EAAOtI,OAChBqT,EAAgB,KAChB/N,EAAQ,GAEH1J,EAAI,EAAGA,EAAIoE,IAAUpE,EAAG,CAG/B,IAFAsR,EAAY5E,EAAO4D,WAAWtQ,IAEd,OAAUsR,EAAY,MAAQ,CAE5C,IAAKmG,EAAe,CAElB,GAAInG,EAAY,MAAQ,EAEjBX,GAAS,IAAM,GAAGjH,EAAM9E,KAAK,IAAM,IAAM,KAC9C,SACK,GAAI5E,EAAI,IAAMoE,EAAQ,EAEtBuM,GAAS,IAAM,GAAGjH,EAAM9E,KAAK,IAAM,IAAM,KAC9C,SAIF6S,EAAgBnG,EAChB,SAIF,GAAIA,EAAY,MAAQ,EACjBX,GAAS,IAAM,GAAGjH,EAAM9E,KAAK,IAAM,IAAM,KAC9C6S,EAAgBnG,EAChB,SAIFA,EAAkE,OAArDmG,EAAgB,OAAU,GAAKnG,EAAY,YAC/CmG,IAEJ9G,GAAS,IAAM,GAAGjH,EAAM9E,KAAK,IAAM,IAAM,KAKhD,GAFA6S,EAAgB,KAEZnG,EAAY,IAAM,CACpB,IAAKX,GAAS,GAAK,EAAG,MACtBjH,EAAM9E,KAAK0M,QACN,GAAIA,EAAY,KAAO,CAC5B,IAAKX,GAAS,GAAK,EAAG,MACtBjH,EAAM9E,KAAK0M,GAAa,EAAM,IAAkB,GAAZA,EAAmB,UAClD,GAAIA,EAAY,MAAS,CAC9B,IAAKX,GAAS,GAAK,EAAG,MACtBjH,EAAM9E,KAAK0M,GAAa,GAAM,IAAMA,GAAa,EAAM,GAAO,IAAkB,GAAZA,EAAmB,SAClF,MAAIA,EAAY,SAIrB,MAAM,IAAIpO,MAAM,sBAHhB,IAAKyN,GAAS,GAAK,EAAG,MACtBjH,EAAM9E,KAAK0M,GAAa,GAAO,IAAMA,GAAa,GAAM,GAAO,IAAMA,GAAa,EAAM,GAAO,IAAkB,GAAZA,EAAmB,MAM5H,OAAO5H,EA8BT,SAASmE,EAAcuC,GACrB,OAAO/E,EAAOqM,YApHhB,SAAqBtH,GAInB,IAFAA,EAWF,SAAoBA,GAClB,OAAIA,EAAIuH,KAAavH,EAAIuH,OAClBvH,EAAIwH,QAAQ,aAAc,IAb3BC,CAAWzH,GAAKwH,QAAQL,EAAmB,KAEzCnT,OAAS,EAAG,MAAO,GAE3B,KAAOgM,EAAIhM,OAAS,GAAM,GACxBgM,GAAY,IAGd,OAAOA,EA0GmB0H,CAAY1H,IAGxC,SAASF,EAAW6H,EAAKC,EAAKtI,EAAQtL,GACpC,IAAK,IAAIpE,EAAI,EAAGA,EAAIoE,KACdpE,EAAI0P,GAAUsI,EAAI5T,QAAUpE,GAAK+X,EAAI3T,UADbpE,EAE5BgY,EAAIhY,EAAI0P,GAAUqI,EAAI/X,GAGxB,OAAOA,K,8CCrzDT,IAAIiY,EAEJA,EAAI,WACF,OAAOtV,KADL,GAIJ,IAEEsV,EAAIA,GAAK,IAAIC,SAAS,cAAb,GACT,MAAOhG,GAEe,iBAAXtS,SAAqBqY,EAAIrY,QAMtCH,EAAOD,QAAUyY,G,6BCjBjBzY,EAAQ+M,WAkCR,SAAoB4L,GAClB,IAAIC,EAAOC,EAAQF,GACfG,EAAWF,EAAK,GAChBG,EAAkBH,EAAK,GAC3B,OAAsC,GAA9BE,EAAWC,GAAuB,EAAIA,GArChD/Y,EAAQkY,YA4CR,SAAqBS,GACnB,IAAIK,EAQAxY,EAPAoY,EAAOC,EAAQF,GACfG,EAAWF,EAAK,GAChBG,EAAkBH,EAAK,GACvBrJ,EAAM,IAAI0J,EAThB,SAAqBN,EAAKG,EAAUC,GAClC,OAAsC,GAA9BD,EAAWC,GAAuB,EAAIA,EAQ5BG,CAAYP,EAAKG,EAAUC,IACzCI,EAAU,EAEV1L,EAAMsL,EAAkB,EAAID,EAAW,EAAIA,EAG/C,IAAKtY,EAAI,EAAGA,EAAIiN,EAAKjN,GAAK,EACxBwY,EAAMI,EAAUT,EAAI7H,WAAWtQ,KAAO,GAAK4Y,EAAUT,EAAI7H,WAAWtQ,EAAI,KAAO,GAAK4Y,EAAUT,EAAI7H,WAAWtQ,EAAI,KAAO,EAAI4Y,EAAUT,EAAI7H,WAAWtQ,EAAI,IACzJ+O,EAAI4J,KAAaH,GAAO,GAAK,IAC7BzJ,EAAI4J,KAAaH,GAAO,EAAI,IAC5BzJ,EAAI4J,KAAmB,IAANH,EAGK,IAApBD,IACFC,EAAMI,EAAUT,EAAI7H,WAAWtQ,KAAO,EAAI4Y,EAAUT,EAAI7H,WAAWtQ,EAAI,KAAO,EAC9E+O,EAAI4J,KAAmB,IAANH,GAGK,IAApBD,IACFC,EAAMI,EAAUT,EAAI7H,WAAWtQ,KAAO,GAAK4Y,EAAUT,EAAI7H,WAAWtQ,EAAI,KAAO,EAAI4Y,EAAUT,EAAI7H,WAAWtQ,EAAI,KAAO,EACvH+O,EAAI4J,KAAaH,GAAO,EAAI,IAC5BzJ,EAAI4J,KAAmB,IAANH,GAGnB,OAAOzJ,GAxETvP,EAAQuR,cA2FR,SAAuB8H,GASrB,IARA,IAAIL,EACAvL,EAAM4L,EAAMzU,OACZ0U,EAAa7L,EAAM,EAEnB8L,EAAQ,GAIH/Y,EAAI,EAAGgZ,EAAO/L,EAAM6L,EAAY9Y,EAAIgZ,EAAMhZ,GAH9B,MAInB+Y,EAAMnU,KAAKqU,EAAYJ,EAAO7Y,EAAGA,EAJd,MAImCgZ,EAAOA,EAAOhZ,EAJjD,QAQF,IAAf8Y,GACFN,EAAMK,EAAM5L,EAAM,GAClB8L,EAAMnU,KAAKsU,EAAOV,GAAO,GAAKU,EAAOV,GAAO,EAAI,IAAQ,OAChC,IAAfM,IACTN,GAAOK,EAAM5L,EAAM,IAAM,GAAK4L,EAAM5L,EAAM,GAC1C8L,EAAMnU,KAAKsU,EAAOV,GAAO,IAAMU,EAAOV,GAAO,EAAI,IAAQU,EAAOV,GAAO,EAAI,IAAQ,MAGrF,OAAOO,EAAMxF,KAAK,KA3GpB,IALA,IAAI2F,EAAS,GACTN,EAAY,GACZH,EAA4B,oBAAf5M,WAA6BA,WAAatD,MACvD+O,EAAO,mEAEFtX,EAAI,EAAGiN,EAAMqK,EAAKlT,OAAQpE,EAAIiN,IAAOjN,EAC5CkZ,EAAOlZ,GAAKsX,EAAKtX,GACjB4Y,EAAUtB,EAAKhH,WAAWtQ,IAAMA,EAQlC,SAASqY,EAAQF,GACf,IAAIlL,EAAMkL,EAAI/T,OAEd,GAAI6I,EAAM,EAAI,EACZ,MAAM,IAAI/J,MAAM,kDAKlB,IAAIoV,EAAWH,EAAItJ,QAAQ,KAG3B,OAFkB,IAAdyJ,IAAiBA,EAAWrL,GAEzB,CAACqL,EADcA,IAAarL,EAAM,EAAI,EAAIqL,EAAW,GAoD9D,SAASW,EAAYJ,EAAO7K,EAAOC,GAIjC,IAHA,IAAIuK,EALmBW,EAMnBjU,EAAS,GAEJlF,EAAIgO,EAAOhO,EAAIiO,EAAKjO,GAAK,EAChCwY,GAAOK,EAAM7Y,IAAM,GAAK,WAAa6Y,EAAM7Y,EAAI,IAAM,EAAI,QAA0B,IAAf6Y,EAAM7Y,EAAI,IAC9EkF,EAAON,KATFsU,GADgBC,EAUOX,IATT,GAAK,IAAQU,EAAOC,GAAO,GAAK,IAAQD,EAAOC,GAAO,EAAI,IAAQD,EAAa,GAANC,IAY9F,OAAOjU,EAAOqO,KAAK,IA3ErBqF,EAAU,IAAItI,WAAW,IAAM,GAC/BsI,EAAU,IAAItI,WAAW,IAAM,I,6BChB/B9Q,EAAQ4P,KAAO,SAAUhE,EAAQsE,EAAQ0J,EAAMC,EAAMC,GACnD,IAAIpH,EAAG9R,EACHmZ,EAAgB,EAATD,EAAaD,EAAO,EAC3BG,GAAQ,GAAKD,GAAQ,EACrBE,EAAQD,GAAQ,EAChBE,GAAS,EACT1Z,EAAIoZ,EAAOE,EAAS,EAAI,EACxBhZ,EAAI8Y,GAAQ,EAAI,EAChBrX,EAAIqJ,EAAOsE,EAAS1P,GAMxB,IALAA,GAAKM,EACL4R,EAAInQ,GAAK,IAAM2X,GAAS,EACxB3X,KAAO2X,EACPA,GAASH,EAEFG,EAAQ,EAAGxH,EAAQ,IAAJA,EAAU9G,EAAOsE,EAAS1P,GAAIA,GAAKM,EAAGoZ,GAAS,GAMrE,IAJAtZ,EAAI8R,GAAK,IAAMwH,GAAS,EACxBxH,KAAOwH,EACPA,GAASL,EAEFK,EAAQ,EAAGtZ,EAAQ,IAAJA,EAAUgL,EAAOsE,EAAS1P,GAAIA,GAAKM,EAAGoZ,GAAS,GAErE,GAAU,IAANxH,EACFA,EAAI,EAAIuH,MACH,IAAIvH,IAAMsH,EACf,OAAOpZ,EAAIuZ,IAAqBnC,KAAdzV,GAAK,EAAI,GAE3B3B,GAAQwF,KAAKC,IAAI,EAAGwT,GACpBnH,GAAQuH,EAGV,OAAQ1X,GAAK,EAAI,GAAK3B,EAAIwF,KAAKC,IAAI,EAAGqM,EAAImH,IAG5C7Z,EAAQsN,MAAQ,SAAU1B,EAAQnK,EAAOyO,EAAQ0J,EAAMC,EAAMC,GAC3D,IAAIpH,EAAG9R,EAAGC,EACNkZ,EAAgB,EAATD,EAAaD,EAAO,EAC3BG,GAAQ,GAAKD,GAAQ,EACrBE,EAAQD,GAAQ,EAChBI,EAAc,KAATP,EAAczT,KAAKC,IAAI,GAAI,IAAMD,KAAKC,IAAI,GAAI,IAAM,EACzD7F,EAAIoZ,EAAO,EAAIE,EAAS,EACxBhZ,EAAI8Y,EAAO,GAAK,EAChBrX,EAAId,EAAQ,GAAe,IAAVA,GAAe,EAAIA,EAAQ,EAAI,EAAI,EAqCxD,IApCAA,EAAQ2E,KAAKiU,IAAI5Y,GAEb0N,MAAM1N,IAAUA,IAAUuW,KAC5BpX,EAAIuO,MAAM1N,GAAS,EAAI,EACvBiR,EAAIsH,IAEJtH,EAAItM,KAAKqD,MAAMrD,KAAKkU,IAAI7Y,GAAS2E,KAAKmU,KAElC9Y,GAASZ,EAAIuF,KAAKC,IAAI,GAAIqM,IAAM,IAClCA,IACA7R,GAAK,IAILY,GADEiR,EAAIuH,GAAS,EACNG,EAAKvZ,EAELuZ,EAAKhU,KAAKC,IAAI,EAAG,EAAI4T,IAGpBpZ,GAAK,IACf6R,IACA7R,GAAK,GAGH6R,EAAIuH,GAASD,GACfpZ,EAAI,EACJ8R,EAAIsH,GACKtH,EAAIuH,GAAS,GACtBrZ,GAAKa,EAAQZ,EAAI,GAAKuF,KAAKC,IAAI,EAAGwT,GAClCnH,GAAQuH,IAERrZ,EAAIa,EAAQ2E,KAAKC,IAAI,EAAG4T,EAAQ,GAAK7T,KAAKC,IAAI,EAAGwT,GACjDnH,EAAI,IAIDmH,GAAQ,EAAGjO,EAAOsE,EAAS1P,GAAS,IAAJI,EAAUJ,GAAKM,EAAGF,GAAK,IAAKiZ,GAAQ,GAK3E,IAHAnH,EAAIA,GAAKmH,EAAOjZ,EAChBmZ,GAAQF,EAEDE,EAAO,EAAGnO,EAAOsE,EAAS1P,GAAS,IAAJkS,EAAUlS,GAAKM,EAAG4R,GAAK,IAAKqH,GAAQ,GAE1EnO,EAAOsE,EAAS1P,EAAIM,IAAU,IAAJyB,I,6BCtF5B,IAAI0L,EAAW,GAAGA,SAElBhO,EAAOD,QAAU+I,MAAMgD,SAAW,SAAUwD,GAC1C,MAA6B,kBAAtBtB,EAAStN,KAAK4O,K,6BCHvB,MAAMiL,EAAc,CAClB,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAGIC,EAAa,CACjB,EACA,EACA,EACA,GACA,GACA,GACA,IACA,KAqDF,SAASC,EAAepT,EAAMkH,EAAO5J,GAEnC,OAAQ0C,EAGV,SAAkBkH,EAAO5J,GACvB,OAAO4V,EAAYhM,GAASiM,EAAWrU,KAAKsE,IAAI9F,EAAS4J,EAAQ,EAAG,IALvDmM,CAAQnM,EAAO5J,MACH4J,EApD3BvO,EAAOD,QAAU,MACfgD,YAAavB,GACX0B,KAAK6H,OAASvJ,EACd0B,KAAKyX,gBAAkBnZ,EAAMmD,OAAS,EACtCzB,KAAK0X,eAAiB,EAGxBpP,gBACE,OAAOtI,KAAK0X,eAAiB,EAA2B,EAAvB1X,KAAKyX,gBAGxCjP,YACE,OAA4B,EAArBxI,KAAK6H,OAAOpG,OAGrB4B,KAAMzD,GACJ,IAAIuI,EAAcvI,EACduD,EAAS,EACb,KAAOgF,GAAenI,KAAK2X,aAAa,CACtC,MAAMxT,EAAOnE,KAAK6H,OAAO7H,KAAKyX,iBACxBnP,EAAgBtI,KAAK0X,eAAiB,EACtCE,EAAS3U,KAAKsE,IAAIe,EAAeH,GAEvChF,GAAUA,GAAUyU,GADNL,EAAcpT,EAAMmE,EAAgBsP,EAAQA,GAG1DzP,GAAeyP,EAEf5X,KAAK0X,gBAAkBE,EACnB5X,KAAK0X,eAAiB,IACxB1X,KAAK0X,eAAiB,EACtB1X,KAAKyX,mBAIT,OAAOtU,EAGTU,OAAQjE,GAEN,IADAI,KAAK0X,gBAAkB9X,EAChBI,KAAK0X,eAAiB,GAC3B1X,KAAK0X,gBAAkB,EACvB1X,KAAKyX,iBAAmB,EAI5BE,YACE,OAAO3X,KAAKyX,iBAAmB","file":"index.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"HamtSharding\"] = factory();\n\telse\n\t\troot[\"HamtSharding\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","'use strict'\n\nconst Bucket = require('./bucket')\n\nmodule.exports = function createHAMT (options) {\n  return new Bucket(options)\n}\n\nmodule.exports.isBucket = Bucket.isBucket\n","'use strict'\n\nconst SparseArray = require('sparse-array')\nconst wrapHash = require('./consumable-hash')\n\nconst defaultOptions = {\n  bits: 8\n}\n\nclass Bucket {\n  constructor (options, parent, posAtParent) {\n    this._options = Object.assign({}, defaultOptions, options)\n    this._popCount = 0\n    this._parent = parent\n    this._posAtParent = posAtParent\n\n    if (!this._options.hashFn) {\n      throw new Error('please define an options.hashFn')\n    }\n\n    // make sure we only wrap options.hashFn once in the whole tree\n    if (!this._options.hash) {\n      this._options.hash = wrapHash(this._options.hashFn)\n    }\n    this._children = new SparseArray()\n  }\n\n  static isBucket (o) {\n    return o instanceof Bucket\n  }\n\n  async put (key, value) {\n    const place = await this._findNewBucketAndPos(key)\n\n    await place.bucket._putAt(place, key, value)\n  }\n\n  async get (key) {\n    const child = await this._findChild(key)\n\n    if (child) {\n      return child.value\n    }\n  }\n\n  async del (key) {\n    const place = await this._findPlace(key)\n    const child = place.bucket._at(place.pos)\n\n    if (child && child.key === key) {\n      place.bucket._delAt(place.pos)\n    }\n  }\n\n  leafCount () {\n    return this._children.compactArray().reduce((acc, child) => {\n      if (child instanceof Bucket) {\n        return acc + child.leafCount()\n      }\n\n      return acc + 1\n    }, 0)\n  }\n\n  childrenCount () {\n    return this._children.length\n  }\n\n  onlyChild () {\n    return this._children.get(0)\n  }\n\n  * eachLeafSeries () {\n    const children = this._children.compactArray()\n\n    for (const child of children) {\n      if (child instanceof Bucket) {\n        for (const c2 of child.eachLeafSeries()) {\n          yield c2\n        }\n      } else {\n        yield child\n      }\n    }\n  }\n\n  serialize (map, reduce) {\n    // serialize to a custom non-sparse representation\n    return reduce(this._children.reduce((acc, child, index) => {\n      if (child) {\n        if (child instanceof Bucket) {\n          acc.push(child.serialize(map, reduce))\n        } else {\n          acc.push(map(child, index))\n        }\n      }\n      return acc\n    }, []))\n  }\n\n  asyncTransform (asyncMap, asyncReduce) {\n    return asyncTransformBucket(this, asyncMap, asyncReduce)\n  }\n\n  toJSON () {\n    return this.serialize(mapNode, reduceNodes)\n  }\n\n  prettyPrint () {\n    return JSON.stringify(this.toJSON(), null, '  ')\n  }\n\n  tableSize () {\n    return Math.pow(2, this._options.bits)\n  }\n\n  async _findChild (key) {\n    const result = await this._findPlace(key)\n    const child = result.bucket._at(result.pos)\n\n    if (child && child.key === key) {\n      return child\n    }\n  }\n\n  async _findPlace (key) {\n    const hashValue = this._options.hash(key)\n    const index = await hashValue.take(this._options.bits)\n\n    const child = this._children.get(index)\n\n    if (child instanceof Bucket) {\n      return child._findPlace(hashValue)\n    }\n\n    return {\n      bucket: this,\n      pos: index,\n      hash: hashValue\n    }\n  }\n\n  async _findNewBucketAndPos (key) {\n    const place = await this._findPlace(key)\n    const child = place.bucket._at(place.pos)\n\n    if (child && child.key !== key) {\n      // conflict\n\n      const bucket = new Bucket(this._options, place.bucket, place.pos)\n      place.bucket._putObjectAt(place.pos, bucket)\n\n      // put the previous value\n      const newPlace = await bucket._findPlace(child.hash)\n      newPlace.bucket._putAt(newPlace, child.key, child.value)\n\n      return bucket._findNewBucketAndPos(place.hash)\n    }\n\n    // no conflict, we found the place\n    return place\n  }\n\n  _putAt (place, key, value) {\n    this._putObjectAt(place.pos, {\n      key: key,\n      value: value,\n      hash: place.hash\n    })\n  }\n\n  _putObjectAt (pos, object) {\n    if (!this._children.get(pos)) {\n      this._popCount++\n    }\n    this._children.set(pos, object)\n  }\n\n  _delAt (pos) {\n    if (this._children.get(pos)) {\n      this._popCount--\n    }\n    this._children.unset(pos)\n    this._level()\n  }\n\n  _level () {\n    if (this._parent && this._popCount <= 1) {\n      if (this._popCount === 1) {\n        // remove myself from parent, replacing me with my only child\n        const onlyChild = this._children.find(exists)\n\n        if (!(onlyChild instanceof Bucket)) {\n          const hash = onlyChild.hash\n          hash.untake(this._options.bits)\n          const place = {\n            pos: this._posAtParent,\n            hash: hash\n          }\n          this._parent._putAt(place, onlyChild.key, onlyChild.value)\n        }\n      } else {\n        this._parent._delAt(this._posAtParent)\n      }\n    }\n  }\n\n  _at (index) {\n    return this._children.get(index)\n  }\n}\n\nfunction exists (o) {\n  return Boolean(o)\n}\n\nfunction mapNode (node, index) {\n  return node.key\n}\n\nfunction reduceNodes (nodes) {\n  return nodes\n}\n\nasync function asyncTransformBucket (bucket, asyncMap, asyncReduce) {\n  const output = []\n\n  for (const child of bucket._children.compactArray()) {\n    if (child instanceof Bucket) {\n      await asyncTransformBucket(child, asyncMap, asyncReduce)\n    } else {\n      const mappedChildren = await asyncMap(child)\n\n      output.push({\n        bitField: bucket._children.bitField(),\n        children: mappedChildren\n      })\n    }\n\n    return asyncReduce(output)\n  }\n}\n\nmodule.exports = Bucket\n","'use strict'; // JS treats subjects of bitwise operators as SIGNED 32 bit numbers,\n// which means the maximum amount of bits we can store inside each byte\n// is 7..\n\nconst BITS_PER_BYTE = 7;\nmodule.exports = class SparseArray {\n  constructor() {\n    this._bitArrays = [];\n    this._data = [];\n    this._length = 0;\n    this._changedLength = false;\n    this._changedData = false;\n  }\n\n  set(index, value) {\n    let pos = this._internalPositionFor(index, false);\n\n    if (value === undefined) {\n      // unsetting\n      if (pos !== -1) {\n        // remove item from bit array and array itself\n        this._unsetInternalPos(pos);\n\n        this._unsetBit(index);\n\n        this._changedLength = true;\n        this._changedData = true;\n      }\n    } else {\n      let needsSort = false;\n\n      if (pos === -1) {\n        pos = this._data.length;\n\n        this._setBit(index);\n\n        this._changedData = true;\n      } else {\n        needsSort = true;\n      }\n\n      this._setInternalPos(pos, index, value, needsSort);\n\n      this._changedLength = true;\n    }\n  }\n\n  unset(index) {\n    this.set(index, undefined);\n  }\n\n  get(index) {\n    this._sortData();\n\n    const pos = this._internalPositionFor(index, true);\n\n    if (pos === -1) {\n      return undefined;\n    }\n\n    return this._data[pos][1];\n  }\n\n  push(value) {\n    this.set(this.length, value);\n    return this.length;\n  }\n\n  get length() {\n    this._sortData();\n\n    if (this._changedLength) {\n      const last = this._data[this._data.length - 1];\n      this._length = last ? last[0] + 1 : 0;\n      this._changedLength = false;\n    }\n\n    return this._length;\n  }\n\n  forEach(iterator) {\n    let i = 0;\n\n    while (i < this.length) {\n      iterator(this.get(i), i, this);\n      i++;\n    }\n  }\n\n  map(iterator) {\n    let i = 0;\n    let mapped = new Array(this.length);\n\n    while (i < this.length) {\n      mapped[i] = iterator(this.get(i), i, this);\n      i++;\n    }\n\n    return mapped;\n  }\n\n  reduce(reducer, initialValue) {\n    let i = 0;\n    let acc = initialValue;\n\n    while (i < this.length) {\n      const value = this.get(i);\n      acc = reducer(acc, value, i);\n      i++;\n    }\n\n    return acc;\n  }\n\n  find(finder) {\n    let i = 0,\n        found,\n        last;\n\n    while (i < this.length && !found) {\n      last = this.get(i);\n      found = finder(last);\n      i++;\n    }\n\n    return found ? last : undefined;\n  }\n\n  _internalPositionFor(index, noCreate) {\n    const bytePos = this._bytePosFor(index, noCreate);\n\n    if (bytePos >= this._bitArrays.length) {\n      return -1;\n    }\n\n    const byte = this._bitArrays[bytePos];\n    const bitPos = index - bytePos * BITS_PER_BYTE;\n    const exists = (byte & 1 << bitPos) > 0;\n\n    if (!exists) {\n      return -1;\n    }\n\n    const previousPopCount = this._bitArrays.slice(0, bytePos).reduce(popCountReduce, 0);\n\n    const mask = ~(0xffffffff << bitPos + 1);\n    const bytePopCount = popCount(byte & mask);\n    const arrayPos = previousPopCount + bytePopCount - 1;\n    return arrayPos;\n  }\n\n  _bytePosFor(index, noCreate) {\n    const bytePos = Math.floor(index / BITS_PER_BYTE);\n    const targetLength = bytePos + 1;\n\n    while (!noCreate && this._bitArrays.length < targetLength) {\n      this._bitArrays.push(0);\n    }\n\n    return bytePos;\n  }\n\n  _setBit(index) {\n    const bytePos = this._bytePosFor(index, false);\n\n    this._bitArrays[bytePos] |= 1 << index - bytePos * BITS_PER_BYTE;\n  }\n\n  _unsetBit(index) {\n    const bytePos = this._bytePosFor(index, false);\n\n    this._bitArrays[bytePos] &= ~(1 << index - bytePos * BITS_PER_BYTE);\n  }\n\n  _setInternalPos(pos, index, value, needsSort) {\n    const data = this._data;\n    const elem = [index, value];\n\n    if (needsSort) {\n      this._sortData();\n\n      data[pos] = elem;\n    } else {\n      // new element. just shove it into the array\n      // but be nice about where we shove it\n      // in order to make sorting it later easier\n      if (data.length) {\n        if (data[data.length - 1][0] >= index) {\n          data.push(elem);\n        } else if (data[0][0] <= index) {\n          data.unshift(elem);\n        } else {\n          const randomIndex = Math.round(data.length / 2);\n          this._data = data.slice(0, randomIndex).concat(elem).concat(data.slice(randomIndex));\n        }\n      } else {\n        this._data.push(elem);\n      }\n\n      this._changedData = true;\n      this._changedLength = true;\n    }\n  }\n\n  _unsetInternalPos(pos) {\n    this._data.splice(pos, 1);\n  }\n\n  _sortData() {\n    if (this._changedData) {\n      this._data.sort(sortInternal);\n    }\n\n    this._changedData = false;\n  }\n\n  bitField() {\n    const bytes = [];\n    let pendingBitsForResultingByte = 8;\n    let pendingBitsForNewByte = 0;\n    let resultingByte = 0;\n    let newByte;\n\n    const pending = this._bitArrays.slice();\n\n    while (pending.length || pendingBitsForNewByte) {\n      if (pendingBitsForNewByte === 0) {\n        newByte = pending.shift();\n        pendingBitsForNewByte = 7;\n      }\n\n      const usingBits = Math.min(pendingBitsForNewByte, pendingBitsForResultingByte);\n      const mask = ~(0b11111111 << usingBits);\n      const masked = newByte & mask;\n      resultingByte |= masked << 8 - pendingBitsForResultingByte;\n      newByte = newByte >>> usingBits;\n      pendingBitsForNewByte -= usingBits;\n      pendingBitsForResultingByte -= usingBits;\n\n      if (!pendingBitsForResultingByte || !pendingBitsForNewByte && !pending.length) {\n        bytes.push(resultingByte);\n        resultingByte = 0;\n        pendingBitsForResultingByte = 8;\n      }\n    } // remove trailing zeroes\n\n\n    for (var i = bytes.length - 1; i > 0; i--) {\n      const value = bytes[i];\n\n      if (value === 0) {\n        bytes.pop();\n      } else {\n        break;\n      }\n    }\n\n    return bytes;\n  }\n\n  compactArray() {\n    this._sortData();\n\n    return this._data.map(valueOnly);\n  }\n\n};\n\nfunction popCountReduce(count, byte) {\n  return count + popCount(byte);\n}\n\nfunction popCount(_v) {\n  let v = _v;\n  v = v - (v >> 1 & 0x55555555); // reuse input as temporary\n\n  v = (v & 0x33333333) + (v >> 2 & 0x33333333); // temp\n\n  return (v + (v >> 4) & 0xF0F0F0F) * 0x1010101 >> 24;\n}\n\nfunction sortInternal(a, b) {\n  return a[0] - b[0];\n}\n\nfunction valueOnly(elem) {\n  return elem[1];\n}","'use strict'\n\nconst ConsumableBuffer = require('./consumable-buffer')\n\nmodule.exports = function wrapHash (hashFn) {\n  return function hashing (value) {\n    if (value instanceof InfiniteHash) {\n      // already a hash. return it\n      return value\n    } else {\n      return new InfiniteHash(value, hashFn)\n    }\n  }\n}\n\nclass InfiniteHash {\n  constructor (value, hashFn) {\n    if ((typeof value) !== 'string' && !Buffer.isBuffer(value)) {\n      throw new Error('can only hash strings or buffers')\n    }\n    this._value = value\n    this._hashFn = hashFn\n    this._depth = -1\n    this._availableBits = 0\n    this._currentBufferIndex = 0\n    this._buffers = []\n  }\n\n  async take (bits) {\n    let pendingBits = bits\n\n    while (this._availableBits < pendingBits) {\n      await this._produceMoreBits()\n    }\n\n    let result = 0\n\n    while (pendingBits > 0) {\n      const hash = this._buffers[this._currentBufferIndex]\n      const available = Math.min(hash.availableBits(), pendingBits)\n      const took = hash.take(available)\n      result = (result << available) + took\n      pendingBits -= available\n      this._availableBits -= available\n\n      if (hash.availableBits() === 0) {\n        this._currentBufferIndex++\n      }\n    }\n\n    return result\n  }\n\n  untake (bits) {\n    let pendingBits = bits\n\n    while (pendingBits > 0) {\n      const hash = this._buffers[this._currentBufferIndex]\n      const availableForUntake = Math.min(hash.totalBits() - hash.availableBits(), pendingBits)\n      hash.untake(availableForUntake)\n      pendingBits -= availableForUntake\n      this._availableBits += availableForUntake\n\n      if (this._currentBufferIndex > 0 && hash.totalBits() === hash.availableBits()) {\n        this._depth--\n        this._currentBufferIndex--\n      }\n    }\n  }\n\n  async _produceMoreBits () {\n    this._depth++\n\n    const value = this._depth ? this._value + this._depth : this._value\n    const hashValue = await this._hashFn(value)\n    const buffer = new ConsumableBuffer(hashValue)\n\n    this._buffers.push(buffer)\n    this._availableBits += buffer.availableBits()\n  }\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n\n/* eslint-disable no-proto */\n'use strict';\n\nvar base64 = require('base64-js');\n\nvar ieee754 = require('ieee754');\n\nvar isArray = require('isarray');\n\nexports.Buffer = Buffer;\nexports.SlowBuffer = SlowBuffer;\nexports.INSPECT_MAX_BYTES = 50;\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\n\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined ? global.TYPED_ARRAY_SUPPORT : typedArraySupport();\n/*\n * Export kMaxLength after typed array support is determined.\n */\n\nexports.kMaxLength = kMaxLength();\n\nfunction typedArraySupport() {\n  try {\n    var arr = new Uint8Array(1);\n    arr.__proto__ = {\n      __proto__: Uint8Array.prototype,\n      foo: function foo() {\n        return 42;\n      }\n    };\n    return arr.foo() === 42 && // typed array instances can be augmented\n    typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n    arr.subarray(1, 1).byteLength === 0; // ie10 has broken `subarray`\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction kMaxLength() {\n  return Buffer.TYPED_ARRAY_SUPPORT ? 0x7fffffff : 0x3fffffff;\n}\n\nfunction createBuffer(that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length');\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length);\n    that.__proto__ = Buffer.prototype;\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length);\n    }\n\n    that.length = length;\n  }\n\n  return that;\n}\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\n\nfunction Buffer(arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length);\n  } // Common case.\n\n\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error('If encoding is specified then the first argument must be a string');\n    }\n\n    return allocUnsafe(this, arg);\n  }\n\n  return from(this, arg, encodingOrOffset, length);\n}\n\nBuffer.poolSize = 8192; // not used by this implementation\n// TODO: Legacy, not needed anymore. Remove in next major version.\n\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype;\n  return arr;\n};\n\nfunction from(that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number');\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length);\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset);\n  }\n\n  return fromObject(that, value);\n}\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\n\n\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length);\n};\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype;\n  Buffer.__proto__ = Uint8Array;\n\n  if (typeof Symbol !== 'undefined' && Symbol.species && Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    });\n  }\n}\n\nfunction assertSize(size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number');\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative');\n  }\n}\n\nfunction alloc(that, size, fill, encoding) {\n  assertSize(size);\n\n  if (size <= 0) {\n    return createBuffer(that, size);\n  }\n\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string' ? createBuffer(that, size).fill(fill, encoding) : createBuffer(that, size).fill(fill);\n  }\n\n  return createBuffer(that, size);\n}\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\n\n\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding);\n};\n\nfunction allocUnsafe(that, size) {\n  assertSize(size);\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0);\n\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0;\n    }\n  }\n\n  return that;\n}\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\n\n\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size);\n};\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\n\n\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size);\n};\n\nfunction fromString(that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8';\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding');\n  }\n\n  var length = byteLength(string, encoding) | 0;\n  that = createBuffer(that, length);\n  var actual = that.write(string, encoding);\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual);\n  }\n\n  return that;\n}\n\nfunction fromArrayLike(that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0;\n  that = createBuffer(that, length);\n\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255;\n  }\n\n  return that;\n}\n\nfunction fromArrayBuffer(that, array, byteOffset, length) {\n  array.byteLength; // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds');\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds');\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array);\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset);\n  } else {\n    array = new Uint8Array(array, byteOffset, length);\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array;\n    that.__proto__ = Buffer.prototype;\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array);\n  }\n\n  return that;\n}\n\nfunction fromObject(that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0;\n    that = createBuffer(that, len);\n\n    if (that.length === 0) {\n      return that;\n    }\n\n    obj.copy(that, 0, 0, len);\n    return that;\n  }\n\n  if (obj) {\n    if (typeof ArrayBuffer !== 'undefined' && obj.buffer instanceof ArrayBuffer || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0);\n      }\n\n      return fromArrayLike(that, obj);\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data);\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.');\n}\n\nfunction checked(length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' + 'size: 0x' + kMaxLength().toString(16) + ' bytes');\n  }\n\n  return length | 0;\n}\n\nfunction SlowBuffer(length) {\n  if (+length != length) {\n    // eslint-disable-line eqeqeq\n    length = 0;\n  }\n\n  return Buffer.alloc(+length);\n}\n\nBuffer.isBuffer = function isBuffer(b) {\n  return !!(b != null && b._isBuffer);\n};\n\nBuffer.compare = function compare(a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers');\n  }\n\n  if (a === b) return 0;\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) return -1;\n  if (y < x) return 1;\n  return 0;\n};\n\nBuffer.isEncoding = function isEncoding(encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true;\n\n    default:\n      return false;\n  }\n};\n\nBuffer.concat = function concat(list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers');\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0);\n  }\n\n  var i;\n\n  if (length === undefined) {\n    length = 0;\n\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length;\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length);\n  var pos = 0;\n\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i];\n\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers');\n    }\n\n    buf.copy(buffer, pos);\n    pos += buf.length;\n  }\n\n  return buffer;\n};\n\nfunction byteLength(string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length;\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' && (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength;\n  }\n\n  if (typeof string !== 'string') {\n    string = '' + string;\n  }\n\n  var len = string.length;\n  if (len === 0) return 0; // Use a for loop to avoid recursion\n\n  var loweredCase = false;\n\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len;\n\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length;\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2;\n\n      case 'hex':\n        return len >>> 1;\n\n      case 'base64':\n        return base64ToBytes(string).length;\n\n      default:\n        if (loweredCase) return utf8ToBytes(string).length; // assume utf8\n\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\n\nBuffer.byteLength = byteLength;\n\nfunction slowToString(encoding, start, end) {\n  var loweredCase = false; // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n\n  if (start === undefined || start < 0) {\n    start = 0;\n  } // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n\n\n  if (start > this.length) {\n    return '';\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length;\n  }\n\n  if (end <= 0) {\n    return '';\n  } // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n\n\n  end >>>= 0;\n  start >>>= 0;\n\n  if (end <= start) {\n    return '';\n  }\n\n  if (!encoding) encoding = 'utf8';\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end);\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end);\n\n      case 'ascii':\n        return asciiSlice(this, start, end);\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end);\n\n      case 'base64':\n        return base64Slice(this, start, end);\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end);\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n        encoding = (encoding + '').toLowerCase();\n        loweredCase = true;\n    }\n  }\n} // The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\n\n\nBuffer.prototype._isBuffer = true;\n\nfunction swap(b, n, m) {\n  var i = b[n];\n  b[n] = b[m];\n  b[m] = i;\n}\n\nBuffer.prototype.swap16 = function swap16() {\n  var len = this.length;\n\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits');\n  }\n\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1);\n  }\n\n  return this;\n};\n\nBuffer.prototype.swap32 = function swap32() {\n  var len = this.length;\n\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits');\n  }\n\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3);\n    swap(this, i + 1, i + 2);\n  }\n\n  return this;\n};\n\nBuffer.prototype.swap64 = function swap64() {\n  var len = this.length;\n\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits');\n  }\n\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7);\n    swap(this, i + 1, i + 6);\n    swap(this, i + 2, i + 5);\n    swap(this, i + 3, i + 4);\n  }\n\n  return this;\n};\n\nBuffer.prototype.toString = function toString() {\n  var length = this.length | 0;\n  if (length === 0) return '';\n  if (arguments.length === 0) return utf8Slice(this, 0, length);\n  return slowToString.apply(this, arguments);\n};\n\nBuffer.prototype.equals = function equals(b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer');\n  if (this === b) return true;\n  return Buffer.compare(this, b) === 0;\n};\n\nBuffer.prototype.inspect = function inspect() {\n  var str = '';\n  var max = exports.INSPECT_MAX_BYTES;\n\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ');\n    if (this.length > max) str += ' ... ';\n  }\n\n  return '<Buffer ' + str + '>';\n};\n\nBuffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer');\n  }\n\n  if (start === undefined) {\n    start = 0;\n  }\n\n  if (end === undefined) {\n    end = target ? target.length : 0;\n  }\n\n  if (thisStart === undefined) {\n    thisStart = 0;\n  }\n\n  if (thisEnd === undefined) {\n    thisEnd = this.length;\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index');\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0;\n  }\n\n  if (thisStart >= thisEnd) {\n    return -1;\n  }\n\n  if (start >= end) {\n    return 1;\n  }\n\n  start >>>= 0;\n  end >>>= 0;\n  thisStart >>>= 0;\n  thisEnd >>>= 0;\n  if (this === target) return 0;\n  var x = thisEnd - thisStart;\n  var y = end - start;\n  var len = Math.min(x, y);\n  var thisCopy = this.slice(thisStart, thisEnd);\n  var targetCopy = target.slice(start, end);\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i];\n      y = targetCopy[i];\n      break;\n    }\n  }\n\n  if (x < y) return -1;\n  if (y < x) return 1;\n  return 0;\n}; // Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\n\n\nfunction bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1; // Normalize byteOffset\n\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset;\n    byteOffset = 0;\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff;\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000;\n  }\n\n  byteOffset = +byteOffset; // Coerce to Number.\n\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : buffer.length - 1;\n  } // Normalize byteOffset: negative offsets start from the end of the buffer\n\n\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1;else byteOffset = buffer.length - 1;\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0;else return -1;\n  } // Normalize val\n\n\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding);\n  } // Finally, search either indexOf (if dir is true) or lastIndexOf\n\n\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1;\n    }\n\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir);\n  } else if (typeof val === 'number') {\n    val = val & 0xFF; // Search for a byte value [0-255]\n\n    if (Buffer.TYPED_ARRAY_SUPPORT && typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);\n      }\n    }\n\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);\n  }\n\n  throw new TypeError('val must be string, number or Buffer');\n}\n\nfunction arrayIndexOf(arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1;\n  var arrLength = arr.length;\n  var valLength = val.length;\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase();\n\n    if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1;\n      }\n\n      indexSize = 2;\n      arrLength /= 2;\n      valLength /= 2;\n      byteOffset /= 2;\n    }\n  }\n\n  function read(buf, i) {\n    if (indexSize === 1) {\n      return buf[i];\n    } else {\n      return buf.readUInt16BE(i * indexSize);\n    }\n  }\n\n  var i;\n\n  if (dir) {\n    var foundIndex = -1;\n\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i;\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex;\n        foundIndex = -1;\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true;\n\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false;\n          break;\n        }\n      }\n\n      if (found) return i;\n    }\n  }\n\n  return -1;\n}\n\nBuffer.prototype.includes = function includes(val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1;\n};\n\nBuffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true);\n};\n\nBuffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false);\n};\n\nfunction hexWrite(buf, string, offset, length) {\n  offset = Number(offset) || 0;\n  var remaining = buf.length - offset;\n\n  if (!length) {\n    length = remaining;\n  } else {\n    length = Number(length);\n\n    if (length > remaining) {\n      length = remaining;\n    }\n  } // must be an even number of digits\n\n\n  var strLen = string.length;\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string');\n\n  if (length > strLen / 2) {\n    length = strLen / 2;\n  }\n\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16);\n    if (isNaN(parsed)) return i;\n    buf[offset + i] = parsed;\n  }\n\n  return i;\n}\n\nfunction utf8Write(buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);\n}\n\nfunction asciiWrite(buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length);\n}\n\nfunction latin1Write(buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length);\n}\n\nfunction base64Write(buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length);\n}\n\nfunction ucs2Write(buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);\n}\n\nBuffer.prototype.write = function write(string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8';\n    length = this.length;\n    offset = 0; // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset;\n    length = this.length;\n    offset = 0; // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0;\n\n    if (isFinite(length)) {\n      length = length | 0;\n      if (encoding === undefined) encoding = 'utf8';\n    } else {\n      encoding = length;\n      length = undefined;\n    } // legacy write(string, encoding, offset, length) - remove in v0.13\n\n  } else {\n    throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');\n  }\n\n  var remaining = this.length - offset;\n  if (length === undefined || length > remaining) length = remaining;\n\n  if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds');\n  }\n\n  if (!encoding) encoding = 'utf8';\n  var loweredCase = false;\n\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length);\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length);\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length);\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length);\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length);\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length);\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n};\n\nBuffer.prototype.toJSON = function toJSON() {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  };\n};\n\nfunction base64Slice(buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf);\n  } else {\n    return base64.fromByteArray(buf.slice(start, end));\n  }\n}\n\nfunction utf8Slice(buf, start, end) {\n  end = Math.min(buf.length, end);\n  var res = [];\n  var i = start;\n\n  while (i < end) {\n    var firstByte = buf[i];\n    var codePoint = null;\n    var bytesPerSequence = firstByte > 0xEF ? 4 : firstByte > 0xDF ? 3 : firstByte > 0xBF ? 2 : 1;\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint;\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte;\n          }\n\n          break;\n\n        case 2:\n          secondByte = buf[i + 1];\n\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | secondByte & 0x3F;\n\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint;\n            }\n          }\n\n          break;\n\n        case 3:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | thirdByte & 0x3F;\n\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint;\n            }\n          }\n\n          break;\n\n        case 4:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          fourthByte = buf[i + 3];\n\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | fourthByte & 0x3F;\n\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint;\n            }\n          }\n\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD;\n      bytesPerSequence = 1;\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000;\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800);\n      codePoint = 0xDC00 | codePoint & 0x3FF;\n    }\n\n    res.push(codePoint);\n    i += bytesPerSequence;\n  }\n\n  return decodeCodePointsArray(res);\n} // Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\n\n\nvar MAX_ARGUMENTS_LENGTH = 0x1000;\n\nfunction decodeCodePointsArray(codePoints) {\n  var len = codePoints.length;\n\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints); // avoid extra slice()\n  } // Decode in chunks to avoid \"call stack size exceeded\".\n\n\n  var res = '';\n  var i = 0;\n\n  while (i < len) {\n    res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));\n  }\n\n  return res;\n}\n\nfunction asciiSlice(buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F);\n  }\n\n  return ret;\n}\n\nfunction latin1Slice(buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i]);\n  }\n\n  return ret;\n}\n\nfunction hexSlice(buf, start, end) {\n  var len = buf.length;\n  if (!start || start < 0) start = 0;\n  if (!end || end < 0 || end > len) end = len;\n  var out = '';\n\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i]);\n  }\n\n  return out;\n}\n\nfunction utf16leSlice(buf, start, end) {\n  var bytes = buf.slice(start, end);\n  var res = '';\n\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n  }\n\n  return res;\n}\n\nBuffer.prototype.slice = function slice(start, end) {\n  var len = this.length;\n  start = ~~start;\n  end = end === undefined ? len : ~~end;\n\n  if (start < 0) {\n    start += len;\n    if (start < 0) start = 0;\n  } else if (start > len) {\n    start = len;\n  }\n\n  if (end < 0) {\n    end += len;\n    if (end < 0) end = 0;\n  } else if (end > len) {\n    end = len;\n  }\n\n  if (end < start) end = start;\n  var newBuf;\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end);\n    newBuf.__proto__ = Buffer.prototype;\n  } else {\n    var sliceLen = end - start;\n    newBuf = new Buffer(sliceLen, undefined);\n\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start];\n    }\n  }\n\n  return newBuf;\n};\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\n\n\nfunction checkOffset(offset, ext, length) {\n  if (offset % 1 !== 0 || offset < 0) throw new RangeError('offset is not uint');\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length');\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n\n  return val;\n};\n\nBuffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length);\n  }\n\n  var val = this[offset + --byteLength];\n  var mul = 1;\n\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul;\n  }\n\n  return val;\n};\n\nBuffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  return this[offset];\n};\n\nBuffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] | this[offset + 1] << 8;\n};\n\nBuffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] << 8 | this[offset + 1];\n};\n\nBuffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 0x1000000;\n};\n\nBuffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] * 0x1000000 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);\n};\n\nBuffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n\n  mul *= 0x80;\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n  return val;\n};\n\nBuffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  var i = byteLength;\n  var mul = 1;\n  var val = this[offset + --i];\n\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul;\n  }\n\n  mul *= 0x80;\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n  return val;\n};\n\nBuffer.prototype.readInt8 = function readInt8(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  if (!(this[offset] & 0x80)) return this[offset];\n  return (0xff - this[offset] + 1) * -1;\n};\n\nBuffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset] | this[offset + 1] << 8;\n  return val & 0x8000 ? val | 0xFFFF0000 : val;\n};\n\nBuffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset + 1] | this[offset] << 8;\n  return val & 0x8000 ? val | 0xFFFF0000 : val;\n};\n\nBuffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;\n};\n\nBuffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];\n};\n\nBuffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return ieee754.read(this, offset, true, 23, 4);\n};\n\nBuffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return ieee754.read(this, offset, false, 23, 4);\n};\n\nBuffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return ieee754.read(this, offset, true, 52, 8);\n};\n\nBuffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return ieee754.read(this, offset, false, 52, 8);\n};\n\nfunction checkInt(buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance');\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds');\n  if (offset + ext > buf.length) throw new RangeError('Index out of range');\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  var mul = 1;\n  var i = 0;\n  this[offset] = value & 0xFF;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = value / mul & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  var i = byteLength - 1;\n  var mul = 1;\n  this[offset + i] = value & 0xFF;\n\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = value / mul & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n  this[offset] = value & 0xff;\n  return offset + 1;\n};\n\nfunction objectWriteUInt16(buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1;\n\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & 0xff << 8 * (littleEndian ? i : 1 - i)) >>> (littleEndian ? i : 1 - i) * 8;\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n  } else {\n    objectWriteUInt16(this, value, offset, true);\n  }\n\n  return offset + 2;\n};\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 8;\n    this[offset + 1] = value & 0xff;\n  } else {\n    objectWriteUInt16(this, value, offset, false);\n  }\n\n  return offset + 2;\n};\n\nfunction objectWriteUInt32(buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1;\n\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = value >>> (littleEndian ? i : 3 - i) * 8 & 0xff;\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = value >>> 24;\n    this[offset + 2] = value >>> 16;\n    this[offset + 1] = value >>> 8;\n    this[offset] = value & 0xff;\n  } else {\n    objectWriteUInt32(this, value, offset, true);\n  }\n\n  return offset + 4;\n};\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 24;\n    this[offset + 1] = value >>> 16;\n    this[offset + 2] = value >>> 8;\n    this[offset + 3] = value & 0xff;\n  } else {\n    objectWriteUInt32(this, value, offset, false);\n  }\n\n  return offset + 4;\n};\n\nBuffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  var i = 0;\n  var mul = 1;\n  var sub = 0;\n  this[offset] = value & 0xFF;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1;\n    }\n\n    this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  var i = byteLength - 1;\n  var mul = 1;\n  var sub = 0;\n  this[offset + i] = value & 0xFF;\n\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1;\n    }\n\n    this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n  if (value < 0) value = 0xff + value + 1;\n  this[offset] = value & 0xff;\n  return offset + 1;\n};\n\nBuffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n  } else {\n    objectWriteUInt16(this, value, offset, true);\n  }\n\n  return offset + 2;\n};\n\nBuffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 8;\n    this[offset + 1] = value & 0xff;\n  } else {\n    objectWriteUInt16(this, value, offset, false);\n  }\n\n  return offset + 2;\n};\n\nBuffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n    this[offset + 2] = value >>> 16;\n    this[offset + 3] = value >>> 24;\n  } else {\n    objectWriteUInt32(this, value, offset, true);\n  }\n\n  return offset + 4;\n};\n\nBuffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  if (value < 0) value = 0xffffffff + value + 1;\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 24;\n    this[offset + 1] = value >>> 16;\n    this[offset + 2] = value >>> 8;\n    this[offset + 3] = value & 0xff;\n  } else {\n    objectWriteUInt32(this, value, offset, false);\n  }\n\n  return offset + 4;\n};\n\nfunction checkIEEE754(buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range');\n  if (offset < 0) throw new RangeError('Index out of range');\n}\n\nfunction writeFloat(buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38);\n  }\n\n  ieee754.write(buf, value, offset, littleEndian, 23, 4);\n  return offset + 4;\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert);\n};\n\nBuffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert);\n};\n\nfunction writeDouble(buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308);\n  }\n\n  ieee754.write(buf, value, offset, littleEndian, 52, 8);\n  return offset + 8;\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert);\n};\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert);\n}; // copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\n\n\nBuffer.prototype.copy = function copy(target, targetStart, start, end) {\n  if (!start) start = 0;\n  if (!end && end !== 0) end = this.length;\n  if (targetStart >= target.length) targetStart = target.length;\n  if (!targetStart) targetStart = 0;\n  if (end > 0 && end < start) end = start; // Copy 0 bytes; we're done\n\n  if (end === start) return 0;\n  if (target.length === 0 || this.length === 0) return 0; // Fatal error conditions\n\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds');\n  }\n\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds');\n  if (end < 0) throw new RangeError('sourceEnd out of bounds'); // Are we oob?\n\n  if (end > this.length) end = this.length;\n\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start;\n  }\n\n  var len = end - start;\n  var i;\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else {\n    Uint8Array.prototype.set.call(target, this.subarray(start, start + len), targetStart);\n  }\n\n  return len;\n}; // Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\n\n\nBuffer.prototype.fill = function fill(val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start;\n      start = 0;\n      end = this.length;\n    } else if (typeof end === 'string') {\n      encoding = end;\n      end = this.length;\n    }\n\n    if (val.length === 1) {\n      var code = val.charCodeAt(0);\n\n      if (code < 256) {\n        val = code;\n      }\n    }\n\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string');\n    }\n\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding);\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255;\n  } // Invalid ranges are not set to a default, so can range check early.\n\n\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index');\n  }\n\n  if (end <= start) {\n    return this;\n  }\n\n  start = start >>> 0;\n  end = end === undefined ? this.length : end >>> 0;\n  if (!val) val = 0;\n  var i;\n\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val;\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val) ? val : utf8ToBytes(new Buffer(val, encoding).toString());\n    var len = bytes.length;\n\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len];\n    }\n  }\n\n  return this;\n}; // HELPER FUNCTIONS\n// ================\n\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g;\n\nfunction base64clean(str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, ''); // Node converts strings with length < 2 to ''\n\n  if (str.length < 2) return ''; // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n\n  while (str.length % 4 !== 0) {\n    str = str + '=';\n  }\n\n  return str;\n}\n\nfunction stringtrim(str) {\n  if (str.trim) return str.trim();\n  return str.replace(/^\\s+|\\s+$/g, '');\n}\n\nfunction toHex(n) {\n  if (n < 16) return '0' + n.toString(16);\n  return n.toString(16);\n}\n\nfunction utf8ToBytes(string, units) {\n  units = units || Infinity;\n  var codePoint;\n  var length = string.length;\n  var leadSurrogate = null;\n  var bytes = [];\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i); // is surrogate component\n\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue;\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue;\n        } // valid lead\n\n\n        leadSurrogate = codePoint;\n        continue;\n      } // 2 leads in a row\n\n\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n        leadSurrogate = codePoint;\n        continue;\n      } // valid surrogate pair\n\n\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n    }\n\n    leadSurrogate = null; // encode utf8\n\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break;\n      bytes.push(codePoint);\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break;\n      bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break;\n      bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break;\n      bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n    } else {\n      throw new Error('Invalid code point');\n    }\n  }\n\n  return bytes;\n}\n\nfunction asciiToBytes(str) {\n  var byteArray = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF);\n  }\n\n  return byteArray;\n}\n\nfunction utf16leToBytes(str, units) {\n  var c, hi, lo;\n  var byteArray = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break;\n    c = str.charCodeAt(i);\n    hi = c >> 8;\n    lo = c % 256;\n    byteArray.push(lo);\n    byteArray.push(hi);\n  }\n\n  return byteArray;\n}\n\nfunction base64ToBytes(str) {\n  return base64.toByteArray(base64clean(str));\n}\n\nfunction blitBuffer(src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if (i + offset >= dst.length || i >= src.length) break;\n    dst[i + offset] = src[i];\n  }\n\n  return i;\n}\n\nfunction isnan(val) {\n  return val !== val; // eslint-disable-line no-self-compare\n}","\"use strict\";\n\nvar g; // This works in non-strict mode\n\ng = function () {\n  return this;\n}();\n\ntry {\n  // This works if eval is allowed (see CSP)\n  g = g || new Function(\"return this\")();\n} catch (e) {\n  // This works if the window reference is available\n  if (typeof window === \"object\") g = window;\n} // g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\n\nmodule.exports = g;","'use strict';\n\nexports.byteLength = byteLength;\nexports.toByteArray = toByteArray;\nexports.fromByteArray = fromByteArray;\nvar lookup = [];\nvar revLookup = [];\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i];\n  revLookup[code.charCodeAt(i)] = i;\n} // Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\n\n\nrevLookup['-'.charCodeAt(0)] = 62;\nrevLookup['_'.charCodeAt(0)] = 63;\n\nfunction getLens(b64) {\n  var len = b64.length;\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4');\n  } // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n\n\n  var validLen = b64.indexOf('=');\n  if (validLen === -1) validLen = len;\n  var placeHoldersLen = validLen === len ? 0 : 4 - validLen % 4;\n  return [validLen, placeHoldersLen];\n} // base64 is 4/3 + up to two characters of the original data\n\n\nfunction byteLength(b64) {\n  var lens = getLens(b64);\n  var validLen = lens[0];\n  var placeHoldersLen = lens[1];\n  return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\n\nfunction _byteLength(b64, validLen, placeHoldersLen) {\n  return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\n\nfunction toByteArray(b64) {\n  var tmp;\n  var lens = getLens(b64);\n  var validLen = lens[0];\n  var placeHoldersLen = lens[1];\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));\n  var curByte = 0; // if there are placeholders, only get up to the last complete 4 chars\n\n  var len = placeHoldersLen > 0 ? validLen - 4 : validLen;\n  var i;\n\n  for (i = 0; i < len; i += 4) {\n    tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];\n    arr[curByte++] = tmp >> 16 & 0xFF;\n    arr[curByte++] = tmp >> 8 & 0xFF;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;\n    arr[curByte++] = tmp >> 8 & 0xFF;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  return arr;\n}\n\nfunction tripletToBase64(num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F];\n}\n\nfunction encodeChunk(uint8, start, end) {\n  var tmp;\n  var output = [];\n\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16 & 0xFF0000) + (uint8[i + 1] << 8 & 0xFF00) + (uint8[i + 2] & 0xFF);\n    output.push(tripletToBase64(tmp));\n  }\n\n  return output.join('');\n}\n\nfunction fromByteArray(uint8) {\n  var tmp;\n  var len = uint8.length;\n  var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes\n\n  var parts = [];\n  var maxChunkLength = 16383; // must be multiple of 3\n  // go through the array every three bytes, we'll deal with trailing stuff later\n\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));\n  } // pad the end with zeros, but make sure to not forget the extra bytes\n\n\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1];\n    parts.push(lookup[tmp >> 2] + lookup[tmp << 4 & 0x3F] + '==');\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1];\n    parts.push(lookup[tmp >> 10] + lookup[tmp >> 4 & 0x3F] + lookup[tmp << 2 & 0x3F] + '=');\n  }\n\n  return parts.join('');\n}","\"use strict\";\n\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var nBits = -7;\n  var i = isLE ? nBytes - 1 : 0;\n  var d = isLE ? -1 : 1;\n  var s = buffer[offset + i];\n  i += d;\n  e = s & (1 << -nBits) - 1;\n  s >>= -nBits;\n  nBits += eLen;\n\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & (1 << -nBits) - 1;\n  e >>= -nBits;\n  nBits += mLen;\n\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : (s ? -1 : 1) * Infinity;\n  } else {\n    m = m + Math.pow(2, mLen);\n    e = e - eBias;\n  }\n\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n};\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;\n  var i = isLE ? 0 : nBytes - 1;\n  var d = isLE ? 1 : -1;\n  var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n  value = Math.abs(value);\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0;\n    e = eMax;\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2);\n\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * Math.pow(2, 1 - eBias);\n    }\n\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n      e = 0;\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = e << mLen | m;\n  eLen += mLen;\n\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128;\n};","\"use strict\";\n\nvar toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};","'use strict'\n\nconst START_MASKS = [\n  0b11111111,\n  0b11111110,\n  0b11111100,\n  0b11111000,\n  0b11110000,\n  0b11100000,\n  0b11000000,\n  0b10000000\n]\n\nconst STOP_MASKS = [\n  0b00000001,\n  0b00000011,\n  0b00000111,\n  0b00001111,\n  0b00011111,\n  0b00111111,\n  0b01111111,\n  0b11111111\n]\n\nmodule.exports = class ConsumableBuffer {\n  constructor (value) {\n    this._value = value\n    this._currentBytePos = value.length - 1\n    this._currentBitPos = 7\n  }\n\n  availableBits () {\n    return this._currentBitPos + 1 + this._currentBytePos * 8\n  }\n\n  totalBits () {\n    return this._value.length * 8\n  }\n\n  take (bits) {\n    let pendingBits = bits\n    let result = 0\n    while (pendingBits && this._haveBits()) {\n      const byte = this._value[this._currentBytePos]\n      const availableBits = this._currentBitPos + 1\n      const taking = Math.min(availableBits, pendingBits)\n      const value = byteBitsToInt(byte, availableBits - taking, taking)\n      result = (result << taking) + value\n\n      pendingBits -= taking\n\n      this._currentBitPos -= taking\n      if (this._currentBitPos < 0) {\n        this._currentBitPos = 7\n        this._currentBytePos--\n      }\n    }\n\n    return result\n  }\n\n  untake (bits) {\n    this._currentBitPos += bits\n    while (this._currentBitPos > 7) {\n      this._currentBitPos -= 8\n      this._currentBytePos += 1\n    }\n  }\n\n  _haveBits () {\n    return this._currentBytePos >= 0\n  }\n}\n\nfunction byteBitsToInt (byte, start, length) {\n  const mask = maskFor(start, length)\n  return (byte & mask) >>> start\n}\n\nfunction maskFor (start, length) {\n  return START_MASKS[start] & STOP_MASKS[Math.min(length + start - 1, 7)]\n}\n"],"sourceRoot":""}